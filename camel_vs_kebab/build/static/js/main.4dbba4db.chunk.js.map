{"version":3,"sources":["components/WelcomePage.js","context/DataContext.js","components/DemographicsForm.js","components/Experiment.js","components/Results.js","App.js","index.js"],"names":["WelcomePage","React","createElement","onClick","window","location","href","DataContext","createContext","DataProvider","_ref","children","formData","setFormData","useState","name","age","experience","taskData","setTaskData","csvData","setCsvData","Provider","value","DemographicsForm","useContext","navigate","useNavigate","handleChange","e","target","[object Object]","onSubmit","preventDefault","className","type","onChange","required","disabled","Experiment","currentTaskIndex","setCurrentTaskIndex","startTime","setStartTime","countdown","setCountdown","feedbackColor","setFeedbackColor","disableButtons","setDisableButtons","shuffledOptions","setShuffledOptions","incorrectOptions","setIncorrectOptions","tasks","identifier","distractors","sentence","useEffect","timer","setTimeout","clearTimeout","Date","now","length","options","sort","Math","random","generateCsvData","csvContent","Papa","unparse","map","task","timeTaken","isCorrect","option","index","key","handleOptionClick","prev","filter","existingTask","find","style","backgroundColor","includes","pointerEvents","ResultPage","blob","Blob","url","URL","createObjectURL","filename","link","document","setAttribute","body","appendChild","click","removeChild","downloadCSV","App","Router","Routes","Route","path","element","Results","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4dbba4db.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction WelcomePage() {\n  return (\n    <div>\n      <header>\n        <h1>Welcome to the Experiment!</h1>\n      </header>\n\n      <main>\n        <p>\n          The goal of this experiment is to study how different \n          identifier styles - <b>camelCase</b> and <b>kebab-case</b> - \n          affect reading speed and accuracy.\n        </p>\n        <p>\n          Here is what you are asked to do:\n        </p>\n        <p>\n          <ul>\n            <li>Start by filling out a short demographics form.</li>\n            <li>Find the correct identifier matching a given phrase \n              as quickly as possible.</li>\n            <li>Complete all the tasks!</li>\n          </ul>\n        </p>\n        <p>\n          Please ensure you are in a distraction-free environment. \n          Whenever you're ready, click the button below to begin.\n        </p>\n        <button onClick={() => (window.location.href = \"/form\")}>\n          Start Experiment\n        </button>\n      </main>\n\n      <footer>\n        <p>Experimentation & Evaluation - 2024</p>\n        <p>&copy; Noah Salvi, Alessandro Della Flora, Stipe Peran</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default WelcomePage;\n","import React, { createContext, useState } from \"react\";\n\nconst DataContext = createContext();\n\nexport const DataProvider = ({ children }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    age: \"\",\n    experience: \"\",\n  });\n  const [taskData, setTaskData] = useState([]);\n  const [csvData, setCsvData] = useState(\"\");\n\n  return (\n    <DataContext.Provider\n      value={{\n        formData,\n        setFormData,\n        taskData,\n        setTaskData,\n        csvData,\n        setCsvData,\n      }}\n    >\n      {children}\n    </DataContext.Provider>\n  );\n};\n\nexport default DataContext;\n","import React, { useContext } from 'react';\nimport DataContext from '../context/DataContext';\nimport { useNavigate } from 'react-router-dom';\n\nfunction DemographicsForm() {\n  const { formData, setFormData } = useContext(DataContext);\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Navigate to the experiment page\n    navigate('/experiment');\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>Demographics Form</h1>\n      </header>\n      <main>\n        <form onSubmit={handleSubmit} className=\"form-container\">\n          <label className=\"form-label\">\n            Name:\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              className=\"form-input\"\n              required\n            />\n          </label>\n          <label className=\"form-label\">\n            Age:\n            <input\n              type=\"number\"\n              name=\"age\"\n              value={formData.age}\n              onChange={handleChange}\n              className=\"form-input\"\n              required\n            />\n          </label>\n          <label className=\"form-label\">\n            Programming Experience:\n            <select\n              name=\"experience\"\n              value={formData.experience}\n              onChange={handleChange}\n              className=\"form-input\"\n              required\n            >\n              <option value=\"\" disabled>\n                Select your experience\n              </option>\n              <option value=\"beginner\">Beginner</option>\n              <option value=\"intermediate\">Intermediate</option>\n              <option value=\"advanced\">Advanced</option>\n            </select>\n          </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </main>\n      <footer>\n        <p>Experimentation & Evaluation - 2024</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default DemographicsForm;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Papa from \"papaparse\";\nimport DataContext from \"../context/DataContext\";\n\nfunction Experiment() {\n  const { formData, taskData, setTaskData, setCsvData } = useContext(DataContext);\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [countdown, setCountdown] = useState(3);\n  const [feedbackColor, setFeedbackColor] = useState({});\n  const [disableButtons, setDisableButtons] = useState(false);\n  const [shuffledOptions, setShuffledOptions] = useState([]);\n  const [incorrectOptions, setIncorrectOptions] = useState([]);\n  const navigate = useNavigate();\n\n  const tasks = [\n    {\n      identifier: \"moveSouth\",\n      type: \"camelCase\",\n      distractors: [\"moveSource\", \"moreSouth\", \"moverSound\"],\n      sentence: \"move south\",\n    },\n    {\n      identifier: \"calculateTotal\",\n      type: \"camelCase\",\n      distractors: [\"calculateSum\", \"totalCalculation\", \"sumCalculate\"],\n      sentence: \"calculate total\",\n    },\n    {\n      identifier: \"user-login-details\",\n      type: \"kebabCase\",\n      distractors: [\"user-details\", \"login-user-details\", \"user-logins\"],\n      sentence: \"user login details\",\n    },\n    {\n      identifier: \"send-message\",\n      type: \"kebabCase\",\n      distractors: [\"seed-mastodon\", \"sand-messenger\", \"deliverMessage\"],\n      sentence: \"send message\",\n    },\n    {\n      identifier: \"startProcess\",\n      type: \"camelCase\",\n      distractors: [\"processStart\", \"initiateProcess\", \"streamProcess\"],\n      sentence: \"start process\",\n    },\n    {\n      identifier: \"refresh-page\",\n      type: \"kebabCase\",\n      distractors: [\"reload-page\", \"reset-page\", \"update-page\"],\n      sentence: \"refresh page\",\n    },\n    {\n      identifier: \"noPainNoGain\",\n      type: \"camelCase\",\n      distractors: [\"noPaceNoTaste\", \"noPainNogain\", \"noPastNoGassed\"],\n      sentence: \"no pain no gain\",\n    },\n    {\n      identifier: \"delete-item\",\n      type: \"kebabCase\",\n      distractors: [\"remove-item\", \"erase-item\", \"discard-item\"],\n      sentence: \"delete item\",\n    },\n    {\n      identifier: \"add-to-cart\",\n      type: \"kebabCase\",\n      distractors: [\"add-cart\", \"place-cart\", \"cart-add\"],\n      sentence: \"add to cart\",\n    },\n    {\n      identifier: \"openFile\",\n      type: \"camelCase\",\n      distractors: [\"openFolder\", \"openFiles\", \"startFile\"],\n      sentence: \"open file\",\n    },\n    {\n      identifier: \"goodGame\",\n      type: \"camelCase\",\n      distractors: [\"goodgame\", \"badGame\", \"goodDay\"],\n      sentence: \"good game\",\n    },\n    {\n      identifier: \"as-soon-as-possible\",\n      type: \"kebabCase\",\n      distractors: [\"as-soon-possible\", \"soon-as-possible\", \"as-soup-as-possible\"],\n      sentence: \"as soon as possible\",\n    },\n    {\n      identifier: \"noWay\",\n      type: \"camelCase\",\n      distractors: [\"noShame\", \"noWave\", \"noPhase\"],\n      sentence: \"no way\",\n    },\n    {\n      identifier: \"yes-man\",\n      type: \"kebabCase\",\n      distractors: [\"no-man\", \"yes-men\", \"yes-can\"],\n      sentence: \"yes man\",\n    },\n    {\n      identifier: \"frontEnd\",\n      type: \"camelCase\",\n      distractors: [\"backEnd\", \"frontMen\", \"frontMad\"],\n      sentence: \"front end\",\n    },\n    {\n      identifier: \"appleCare\",\n      type: \"camelCase\",\n      distractors: [\"appleStare\", \"apleCare\", \"apppleCare\"],\n      sentence: \"apple care\",\n    },\n    {\n      identifier: \"hugoBoss\",\n      type: \"camelCase\",\n      distractors: [\"hugoBros\", \"hugeBoss\", \"bossHugo\"],\n      sentence: \"hugo boss\",\n    },\n    {\n      identifier: \"pop-punk\",\n      type: \"kebabCase\",\n      distractors: [\"pro-funk\", \"per-punk\", \"pop-drunk\"],\n      sentence: \"pop punk\",\n    },\n    {\n      identifier: \"ciao-a-tutti\",\n      type: \"kebabCase\",\n      distractors: [\"ciao-tutti\", \"ciao-ai-brutti\", \"cioa-a-tutti\"],\n      sentence: \"ciao a tutti\",\n    },\n    {\n      identifier: \"end-of-experiment\",\n      type: \"kebabCase\",\n      distractors: [\"sand-of-experiment\", \"end-or-experiment\", \"end-of-ecsperiment\"],\n      sentence: \"end of experiment\",\n    },\n  ];\n\n  useEffect(() => {\n    setTaskData([]); // Clear previous experiment data\n  }, [setTaskData]);\n\n  useEffect(() => {\n    if (countdown > 0) {\n      const timer = setTimeout(() => setCountdown(countdown - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (startTime === null) {\n      setStartTime(Date.now());\n    }\n  }, [countdown, startTime]);\n\n  useEffect(() => {\n    if (tasks && tasks.length > 0) {\n      const options = [tasks[currentTaskIndex].identifier, ...tasks[currentTaskIndex].distractors];\n      setShuffledOptions(options.sort(() => Math.random() - 0.5));\n      setIncorrectOptions([]);\n    }\n  // eslint-disable-next-line\n  }, [currentTaskIndex]);\n\n\n  const handleOptionClick = (isCorrect, option) => {\n    const endTime = Date.now();\n    const timeTaken = endTime - startTime;\n  \n    if (disableButtons) return;\n  \n    if (isCorrect) {\n      setFeedbackColor({ [option]: \"green\" });\n      setDisableButtons(true);\n  \n      setTaskData((prev) => {\n        const updatedData = prev.filter((task) => task.identifier !== tasks[currentTaskIndex].identifier);\n        return [\n          ...updatedData,\n          {\n            ...tasks[currentTaskIndex],\n            timeTaken,\n            isCorrect: true,\n          },\n        ];\n      });\n  \n      setTimeout(() => {\n        if (currentTaskIndex + 1 < tasks.length) {\n          setCurrentTaskIndex(currentTaskIndex + 1);\n          setStartTime(Date.now());\n          setFeedbackColor({});\n          setDisableButtons(false);\n        } else {\n          generateCsvData();\n          navigate(\"/results\");\n        }\n      }, 1000);\n    } else {\n      if (!disableButtons) {\n        setTaskData((prev) => {\n          const existingTask = prev.find((task) => task.identifier === tasks[currentTaskIndex].identifier);\n          if (existingTask && existingTask.isCorrect) {\n            return prev;\n          }\n          const updatedData = prev.filter((task) => task.identifier !== tasks[currentTaskIndex].identifier);\n          return [\n            ...updatedData,\n            {\n              ...tasks[currentTaskIndex],\n              timeTaken,\n              isCorrect: false,\n            },\n          ];\n        });\n      }\n  \n      setIncorrectOptions((prev) => [...prev, option]);\n    }\n  };\n  \n  \n\n  const generateCsvData = () => {\n    const csvContent = Papa.unparse(\n      taskData.map((task) => ({\n        name: formData.name,\n        age: formData.age,\n        experience: formData.experience,\n        identifier: task.identifier,\n        type: task.type,\n        timeTaken: task.timeTaken,\n        isCorrect: task.isCorrect,\n      }))\n    );\n\n    setCsvData(csvContent);\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>Experiment</h1>\n      </header>\n      <main>\n        {countdown > 0 ? (\n          <div>\n            <h1>The experiment will start in:</h1>\n            <h1>{countdown}</h1>\n          </div>\n        ) : currentTaskIndex < tasks.length ? (\n          <div>\n            <p>\n              Identify the corresponding identifier for:\n            </p>\n            <h1>\n              <strong>{tasks[currentTaskIndex].sentence}</strong>\n            </h1>\n            <div className=\"card-grid\">\n              {shuffledOptions.map((option, index) => (\n                <button\n                  key={index}\n                  className=\"card-button\"\n                  onClick={() =>\n                    handleOptionClick(option === tasks[currentTaskIndex].identifier, option)\n                  }\n                  style={{\n                    backgroundColor:\n                      feedbackColor[option] || (incorrectOptions.includes(option) ? \"red\" : \"\"),\n                    pointerEvents: disableButtons ? \"none\" : \"auto\",\n                  }}                  \n                >\n                  {option}\n                </button>\n              ))}\n            </div>\n            <p>Task {currentTaskIndex + 1} of {tasks.length}</p>\n          </div>\n        ) : (\n          <p>Experiment completed!</p>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default Experiment;\n","import React, { useContext, useEffect } from 'react';\nimport DataContext from '../context/DataContext';\nimport Papa from 'papaparse';\n\nfunction downloadCSV(taskData, formData) {\n    const csvData = Papa.unparse(\n        taskData.map((task) => ({\n            age: formData.age,\n            experience: formData.experience,\n            identifier: task.identifier,\n            type: task.type,\n            timeTaken: task.timeTaken,\n        }))\n    );\n\n    const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n\n    // Append the participant's name to the filename\n    const participantName = formData.name || 'participant'; // Default to 'participant' if name is not provided\n    const filename = `experiment_results_${participantName}.csv`;\n\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', filename);\n    document.body.appendChild(link); // Required for Firefox\n    link.click();\n    document.body.removeChild(link); // Clean up\n}\n\nfunction ResultPage() {\n    const { taskData, formData } = useContext(DataContext); // Access context values\n\n    // Automatically download the CSV file when the component mounts\n    useEffect(() => {\n        if (taskData && formData) {\n            downloadCSV(taskData, formData);\n        }\n    }, [taskData, formData]);\n\n    return (\n        <div>\n            <header>\n                <h1>Experiment Results</h1>\n            </header>\n            <main>\n                <h3>Thank you for participating in the experiment!</h3>\n                <h3>Summary</h3>\n                <ul>\n                    {taskData.map((task, index) => (\n                        <li key={index}>\n                            <strong>{task.identifier}</strong> ({task.type}): {task.timeTaken}ms\n                        </li>\n                    ))}\n                </ul>\n            </main>\n            <footer>\n                <p>Experimentation & Evaluation - 2024</p>\n            </footer>\n        </div>\n    );\n}\n\nexport default ResultPage;\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport React from 'react';\nimport WelcomePage from \"./components/WelcomePage\";\nimport DemographicsForm from \"./components/DemographicsForm\";\nimport Experiment from \"./components/Experiment\";\nimport Results from \"./components/Results\";\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<WelcomePage />} />\n        <Route path=\"/form\" element={<DemographicsForm />} />\n        <Route path=\"/experiment\" element={<Experiment />} />\n        <Route path=\"/results\" element={<Results />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport { DataProvider } from \"./context/DataContext\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}