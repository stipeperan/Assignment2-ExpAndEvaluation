{"ast":null,"code":"var _jsxFileName = \"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/Assignment2-ExpAndEvaluation/camel_vs_kebab/src/components/WelcomePage.js\";\nimport React from \"react\";\nfunction WelcomePage() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 11\n    }\n  }, \"Welcome to the Experiment!\")), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"About the Experiment\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"The purpose of this experiment is to understand how people process and recognize different naming conventions used in programming, specifically \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 159\n    }\n  }, \"camelCase\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 180\n    }\n  }, \"kebab-case\"), \".\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"How to Participate\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"You will be shown a phrase and asked to select the identifier (programming-style representation) that matches it best from a set of options.\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"What to Expect\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Below is an example of how a test will look during the experiment. You will see a phrase at the top and several buttons below it. Your task is to click on the button with the correct identifier.\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"20px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/Test.png\",\n    style: {\n      maxWidth: \"100%\",\n      height: \"auto\",\n      padding: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Here\\u2019s how the feedback works:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"If you select the \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 35\n    }\n  }, \"correct answer\"), \", the button will turn \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"green\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 79\n    }\n  }, \"green\"), \", indicating success. After a brief moment, the experiment will automatically proceed to the next test.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"If you select an \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 34\n    }\n  }, \"incorrect answer\"), \", the button will turn \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 80\n    }\n  }, \"red\"), \". You can still try again until you find the correct identifier.\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"The goal is to be as \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 36\n    }\n  }, \"fast\"), \" and \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 52\n    }\n  }, \"accurate\"), \" as possible!\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Ready to Begin?\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"When you click the \\\"Start Experiment\\\" button, you will be taken to a form to provide basic demographic information. After submitting the form, the experiment will begin.\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => window.location.href = \"/form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Start Experiment\"))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Experimentation & Evaluation - 2024\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"\\xA9 Noah Salvi, Alessandro Della Flora, Stipe Peran\")));\n}\nexport default WelcomePage;","map":{"version":3,"names":["React","WelcomePage","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","margin","src","maxWidth","height","padding","color","fontWeight","onClick","window","location","href"],"sources":["/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/Assignment2-ExpAndEvaluation/camel_vs_kebab/src/components/WelcomePage.js"],"sourcesContent":["import React from \"react\";\n\nfunction WelcomePage() {\n  return (\n      <div>\n        <header>\n          <h1>Welcome to the Experiment!</h1>\n        </header>\n\n        <main>\n          <section>\n            <h2>About the Experiment</h2>\n            <p>\n              The purpose of this experiment is to understand how people process and recognize different naming conventions used in programming, specifically <b>camelCase</b> and <b>kebab-case</b>.\n            </p>\n          </section>\n\n          <section>\n            <h2>How to Participate</h2>\n            <p>\n              You will be shown a phrase and asked to select the identifier (programming-style representation) that matches it best from a set of options.\n            </p>\n          </section>\n\n          <section>\n            <h2>What to Expect</h2>\n            <p>\n              Below is an example of how a test will look during the experiment. You will see a phrase at the top and several buttons below it. Your task is to click on the button with the correct identifier.\n            </p>\n            <div style={{ textAlign: \"center\", margin: \"20px 0\" }}>\n              <img\n                  src=\"/Test.png\"\n                  style={{ maxWidth: \"100%\", height: \"auto\", padding: \"10px\" }}\n              />\n            </div>\n            <p>\n              Hereâ€™s how the feedback works:\n            </p>\n            <ul>\n              <li>\n                If you select the <b>correct answer</b>, the button will turn <span style={{ color: \"green\", fontWeight: \"bold\" }}>green</span>, indicating success. After a brief moment, the experiment will automatically proceed to the next test.\n              </li>\n              <li>\n                If you select an <b>incorrect answer</b>, the button will turn <span style={{ color: \"red\", fontWeight: \"bold\" }}>red</span>. You can still try again until you find the correct identifier.\n              </li>\n            </ul>\n            <p>\n              The goal is to be as <b>fast</b> and <b>accurate</b> as possible!\n            </p>\n          </section>\n\n          <section>\n            <h2>Ready to Begin?</h2>\n            <p>\n              When you click the \"Start Experiment\" button, you will be taken to a form to provide basic demographic information. After submitting the form, the experiment will begin.\n            </p>\n            <button onClick={() => (window.location.href = \"/form\")}>\n              Start Experiment\n            </button>\n          </section>\n        </main>\n\n        <footer>\n          <p>Experimentation & Evaluation - 2024</p>\n          <p>&copy; Noah Salvi, Alessandro Della Flora, Stipe Peran</p>\n        </footer>\n      </div>\n  );\n}\n\nexport default WelcomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}