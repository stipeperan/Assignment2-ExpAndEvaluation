{"ast":null,"code":"/* @license\nPapa Parse\nv5.4.1\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n!function (e, t) {\n  \"function\" == typeof define && define.amd ? define([], t) : \"object\" == typeof module && \"undefined\" != typeof exports ? module.exports = t() : e.Papa = t();\n}(this, function s() {\n  \"use strict\";\n\n  var f = \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : void 0 !== f ? f : {};\n  var n = !f.document && !!f.postMessage,\n    o = f.IS_PAPA_WORKER || !1,\n    a = {},\n    u = 0,\n    b = {\n      parse: function (e, t) {\n        var r = (t = t || {}).dynamicTyping || !1;\n        J(r) && (t.dynamicTypingFunction = r, r = {});\n        if (t.dynamicTyping = r, t.transform = !!J(t.transform) && t.transform, t.worker && b.WORKERS_SUPPORTED) {\n          var i = function () {\n            if (!b.WORKERS_SUPPORTED) return !1;\n            var e = (r = f.URL || f.webkitURL || null, i = s.toString(), b.BLOB_URL || (b.BLOB_URL = r.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \", \"(\", i, \")();\"], {\n                type: \"text/javascript\"\n              })))),\n              t = new f.Worker(e);\n            var r, i;\n            return t.onmessage = _, t.id = u++, a[t.id] = t;\n          }();\n          return i.userStep = t.step, i.userChunk = t.chunk, i.userComplete = t.complete, i.userError = t.error, t.step = J(t.step), t.chunk = J(t.chunk), t.complete = J(t.complete), t.error = J(t.error), delete t.worker, void i.postMessage({\n            input: e,\n            config: t,\n            workerId: i.id\n          });\n        }\n        var n = null;\n        b.NODE_STREAM_INPUT, \"string\" == typeof e ? (e = function (e) {\n          if (65279 === e.charCodeAt(0)) return e.slice(1);\n          return e;\n        }(e), n = t.download ? new l(t) : new p(t)) : !0 === e.readable && J(e.read) && J(e.on) ? n = new g(t) : (f.File && e instanceof File || e instanceof Object) && (n = new c(t));\n        return n.stream(e);\n      },\n      unparse: function (e, t) {\n        var n = !1,\n          _ = !0,\n          m = \",\",\n          y = \"\\r\\n\",\n          s = '\"',\n          a = s + s,\n          r = !1,\n          i = null,\n          o = !1;\n        !function () {\n          if (\"object\" != typeof t) return;\n          \"string\" != typeof t.delimiter || b.BAD_DELIMITERS.filter(function (e) {\n            return -1 !== t.delimiter.indexOf(e);\n          }).length || (m = t.delimiter);\n          (\"boolean\" == typeof t.quotes || \"function\" == typeof t.quotes || Array.isArray(t.quotes)) && (n = t.quotes);\n          \"boolean\" != typeof t.skipEmptyLines && \"string\" != typeof t.skipEmptyLines || (r = t.skipEmptyLines);\n          \"string\" == typeof t.newline && (y = t.newline);\n          \"string\" == typeof t.quoteChar && (s = t.quoteChar);\n          \"boolean\" == typeof t.header && (_ = t.header);\n          if (Array.isArray(t.columns)) {\n            if (0 === t.columns.length) throw new Error(\"Option columns is empty\");\n            i = t.columns;\n          }\n          void 0 !== t.escapeChar && (a = t.escapeChar + s);\n          (\"boolean\" == typeof t.escapeFormulae || t.escapeFormulae instanceof RegExp) && (o = t.escapeFormulae instanceof RegExp ? t.escapeFormulae : /^[=+\\-@\\t\\r].*$/);\n        }();\n        var u = new RegExp(Q(s), \"g\");\n        \"string\" == typeof e && (e = JSON.parse(e));\n        if (Array.isArray(e)) {\n          if (!e.length || Array.isArray(e[0])) return h(null, e, r);\n          if (\"object\" == typeof e[0]) return h(i || Object.keys(e[0]), e, r);\n        } else if (\"object\" == typeof e) return \"string\" == typeof e.data && (e.data = JSON.parse(e.data)), Array.isArray(e.data) && (e.fields || (e.fields = e.meta && e.meta.fields || i), e.fields || (e.fields = Array.isArray(e.data[0]) ? e.fields : \"object\" == typeof e.data[0] ? Object.keys(e.data[0]) : []), Array.isArray(e.data[0]) || \"object\" == typeof e.data[0] || (e.data = [e.data])), h(e.fields || [], e.data || [], r);\n        throw new Error(\"Unable to serialize unrecognized input\");\n        function h(e, t, r) {\n          var i = \"\";\n          \"string\" == typeof e && (e = JSON.parse(e)), \"string\" == typeof t && (t = JSON.parse(t));\n          var n = Array.isArray(e) && 0 < e.length,\n            s = !Array.isArray(t[0]);\n          if (n && _) {\n            for (var a = 0; a < e.length; a++) 0 < a && (i += m), i += v(e[a], a);\n            0 < t.length && (i += y);\n          }\n          for (var o = 0; o < t.length; o++) {\n            var u = n ? e.length : t[o].length,\n              h = !1,\n              f = n ? 0 === Object.keys(t[o]).length : 0 === t[o].length;\n            if (r && !n && (h = \"greedy\" === r ? \"\" === t[o].join(\"\").trim() : 1 === t[o].length && 0 === t[o][0].length), \"greedy\" === r && n) {\n              for (var d = [], l = 0; l < u; l++) {\n                var c = s ? e[l] : l;\n                d.push(t[o][c]);\n              }\n              h = \"\" === d.join(\"\").trim();\n            }\n            if (!h) {\n              for (var p = 0; p < u; p++) {\n                0 < p && !f && (i += m);\n                var g = n && s ? e[p] : p;\n                i += v(t[o][g], p);\n              }\n              o < t.length - 1 && (!r || 0 < u && !f) && (i += y);\n            }\n          }\n          return i;\n        }\n        function v(e, t) {\n          if (null == e) return \"\";\n          if (e.constructor === Date) return JSON.stringify(e).slice(1, 25);\n          var r = !1;\n          o && \"string\" == typeof e && o.test(e) && (e = \"'\" + e, r = !0);\n          var i = e.toString().replace(u, a);\n          return (r = r || !0 === n || \"function\" == typeof n && n(e, t) || Array.isArray(n) && n[t] || function (e, t) {\n            for (var r = 0; r < t.length; r++) if (-1 < e.indexOf(t[r])) return !0;\n            return !1;\n          }(i, b.BAD_DELIMITERS) || -1 < i.indexOf(m) || \" \" === i.charAt(0) || \" \" === i.charAt(i.length - 1)) ? s + i + s : i;\n        }\n      }\n    };\n  if (b.RECORD_SEP = String.fromCharCode(30), b.UNIT_SEP = String.fromCharCode(31), b.BYTE_ORDER_MARK = \"\\ufeff\", b.BAD_DELIMITERS = [\"\\r\", \"\\n\", '\"', b.BYTE_ORDER_MARK], b.WORKERS_SUPPORTED = !n && !!f.Worker, b.NODE_STREAM_INPUT = 1, b.LocalChunkSize = 10485760, b.RemoteChunkSize = 5242880, b.DefaultDelimiter = \",\", b.Parser = E, b.ParserHandle = r, b.NetworkStreamer = l, b.FileStreamer = c, b.StringStreamer = p, b.ReadableStreamStreamer = g, f.jQuery) {\n    var d = f.jQuery;\n    d.fn.parse = function (o) {\n      var r = o.config || {},\n        u = [];\n      return this.each(function (e) {\n        if (!(\"INPUT\" === d(this).prop(\"tagName\").toUpperCase() && \"file\" === d(this).attr(\"type\").toLowerCase() && f.FileReader) || !this.files || 0 === this.files.length) return !0;\n        for (var t = 0; t < this.files.length; t++) u.push({\n          file: this.files[t],\n          inputElem: this,\n          instanceConfig: d.extend({}, r)\n        });\n      }), e(), this;\n      function e() {\n        if (0 !== u.length) {\n          var e,\n            t,\n            r,\n            i,\n            n = u[0];\n          if (J(o.before)) {\n            var s = o.before(n.file, n.inputElem);\n            if (\"object\" == typeof s) {\n              if (\"abort\" === s.action) return e = \"AbortError\", t = n.file, r = n.inputElem, i = s.reason, void (J(o.error) && o.error({\n                name: e\n              }, t, r, i));\n              if (\"skip\" === s.action) return void h();\n              \"object\" == typeof s.config && (n.instanceConfig = d.extend(n.instanceConfig, s.config));\n            } else if (\"skip\" === s) return void h();\n          }\n          var a = n.instanceConfig.complete;\n          n.instanceConfig.complete = function (e) {\n            J(a) && a(e, n.file, n.inputElem), h();\n          }, b.parse(n.file, n.instanceConfig);\n        } else J(o.complete) && o.complete();\n      }\n      function h() {\n        u.splice(0, 1), e();\n      }\n    };\n  }\n  function h(e) {\n    this._handle = null, this._finished = !1, this._completed = !1, this._halted = !1, this._input = null, this._baseIndex = 0, this._partialLine = \"\", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = !0, this._completeResults = {\n      data: [],\n      errors: [],\n      meta: {}\n    }, function (e) {\n      var t = w(e);\n      t.chunkSize = parseInt(t.chunkSize), e.step || e.chunk || (t.chunkSize = null);\n      this._handle = new r(t), (this._handle.streamer = this)._config = t;\n    }.call(this, e), this.parseChunk = function (e, t) {\n      if (this.isFirstChunk && J(this._config.beforeFirstChunk)) {\n        var r = this._config.beforeFirstChunk(e);\n        void 0 !== r && (e = r);\n      }\n      this.isFirstChunk = !1, this._halted = !1;\n      var i = this._partialLine + e;\n      this._partialLine = \"\";\n      var n = this._handle.parse(i, this._baseIndex, !this._finished);\n      if (!this._handle.paused() && !this._handle.aborted()) {\n        var s = n.meta.cursor;\n        this._finished || (this._partialLine = i.substring(s - this._baseIndex), this._baseIndex = s), n && n.data && (this._rowCount += n.data.length);\n        var a = this._finished || this._config.preview && this._rowCount >= this._config.preview;\n        if (o) f.postMessage({\n          results: n,\n          workerId: b.WORKER_ID,\n          finished: a\n        });else if (J(this._config.chunk) && !t) {\n          if (this._config.chunk(n, this._handle), this._handle.paused() || this._handle.aborted()) return void (this._halted = !0);\n          n = void 0, this._completeResults = void 0;\n        }\n        return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(n.data), this._completeResults.errors = this._completeResults.errors.concat(n.errors), this._completeResults.meta = n.meta), this._completed || !a || !J(this._config.complete) || n && n.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = !0), a || n && n.meta.paused || this._nextChunk(), n;\n      }\n      this._halted = !0;\n    }, this._sendError = function (e) {\n      J(this._config.error) ? this._config.error(e) : o && this._config.error && f.postMessage({\n        workerId: b.WORKER_ID,\n        error: e,\n        finished: !1\n      });\n    };\n  }\n  function l(e) {\n    var i;\n    (e = e || {}).chunkSize || (e.chunkSize = b.RemoteChunkSize), h.call(this, e), this._nextChunk = n ? function () {\n      this._readChunk(), this._chunkLoaded();\n    } : function () {\n      this._readChunk();\n    }, this.stream = function (e) {\n      this._input = e, this._nextChunk();\n    }, this._readChunk = function () {\n      if (this._finished) this._chunkLoaded();else {\n        if (i = new XMLHttpRequest(), this._config.withCredentials && (i.withCredentials = this._config.withCredentials), n || (i.onload = v(this._chunkLoaded, this), i.onerror = v(this._chunkError, this)), i.open(this._config.downloadRequestBody ? \"POST\" : \"GET\", this._input, !n), this._config.downloadRequestHeaders) {\n          var e = this._config.downloadRequestHeaders;\n          for (var t in e) i.setRequestHeader(t, e[t]);\n        }\n        if (this._config.chunkSize) {\n          var r = this._start + this._config.chunkSize - 1;\n          i.setRequestHeader(\"Range\", \"bytes=\" + this._start + \"-\" + r);\n        }\n        try {\n          i.send(this._config.downloadRequestBody);\n        } catch (e) {\n          this._chunkError(e.message);\n        }\n        n && 0 === i.status && this._chunkError();\n      }\n    }, this._chunkLoaded = function () {\n      4 === i.readyState && (i.status < 200 || 400 <= i.status ? this._chunkError() : (this._start += this._config.chunkSize ? this._config.chunkSize : i.responseText.length, this._finished = !this._config.chunkSize || this._start >= function (e) {\n        var t = e.getResponseHeader(\"Content-Range\");\n        if (null === t) return -1;\n        return parseInt(t.substring(t.lastIndexOf(\"/\") + 1));\n      }(i), this.parseChunk(i.responseText)));\n    }, this._chunkError = function (e) {\n      var t = i.statusText || e;\n      this._sendError(new Error(t));\n    };\n  }\n  function c(e) {\n    var i, n;\n    (e = e || {}).chunkSize || (e.chunkSize = b.LocalChunkSize), h.call(this, e);\n    var s = \"undefined\" != typeof FileReader;\n    this.stream = function (e) {\n      this._input = e, n = e.slice || e.webkitSlice || e.mozSlice, s ? ((i = new FileReader()).onload = v(this._chunkLoaded, this), i.onerror = v(this._chunkError, this)) : i = new FileReaderSync(), this._nextChunk();\n    }, this._nextChunk = function () {\n      this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();\n    }, this._readChunk = function () {\n      var e = this._input;\n      if (this._config.chunkSize) {\n        var t = Math.min(this._start + this._config.chunkSize, this._input.size);\n        e = n.call(e, this._start, t);\n      }\n      var r = i.readAsText(e, this._config.encoding);\n      s || this._chunkLoaded({\n        target: {\n          result: r\n        }\n      });\n    }, this._chunkLoaded = function (e) {\n      this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e.target.result);\n    }, this._chunkError = function () {\n      this._sendError(i.error);\n    };\n  }\n  function p(e) {\n    var r;\n    h.call(this, e = e || {}), this.stream = function (e) {\n      return r = e, this._nextChunk();\n    }, this._nextChunk = function () {\n      if (!this._finished) {\n        var e,\n          t = this._config.chunkSize;\n        return t ? (e = r.substring(0, t), r = r.substring(t)) : (e = r, r = \"\"), this._finished = !r, this.parseChunk(e);\n      }\n    };\n  }\n  function g(e) {\n    h.call(this, e = e || {});\n    var t = [],\n      r = !0,\n      i = !1;\n    this.pause = function () {\n      h.prototype.pause.apply(this, arguments), this._input.pause();\n    }, this.resume = function () {\n      h.prototype.resume.apply(this, arguments), this._input.resume();\n    }, this.stream = function (e) {\n      this._input = e, this._input.on(\"data\", this._streamData), this._input.on(\"end\", this._streamEnd), this._input.on(\"error\", this._streamError);\n    }, this._checkIsFinished = function () {\n      i && 1 === t.length && (this._finished = !0);\n    }, this._nextChunk = function () {\n      this._checkIsFinished(), t.length ? this.parseChunk(t.shift()) : r = !0;\n    }, this._streamData = v(function (e) {\n      try {\n        t.push(\"string\" == typeof e ? e : e.toString(this._config.encoding)), r && (r = !1, this._checkIsFinished(), this.parseChunk(t.shift()));\n      } catch (e) {\n        this._streamError(e);\n      }\n    }, this), this._streamError = v(function (e) {\n      this._streamCleanUp(), this._sendError(e);\n    }, this), this._streamEnd = v(function () {\n      this._streamCleanUp(), i = !0, this._streamData(\"\");\n    }, this), this._streamCleanUp = v(function () {\n      this._input.removeListener(\"data\", this._streamData), this._input.removeListener(\"end\", this._streamEnd), this._input.removeListener(\"error\", this._streamError);\n    }, this);\n  }\n  function r(m) {\n    var a,\n      o,\n      u,\n      i = Math.pow(2, 53),\n      n = -i,\n      s = /^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,\n      h = /^((\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)))$/,\n      t = this,\n      r = 0,\n      f = 0,\n      d = !1,\n      e = !1,\n      l = [],\n      c = {\n        data: [],\n        errors: [],\n        meta: {}\n      };\n    if (J(m.step)) {\n      var p = m.step;\n      m.step = function (e) {\n        if (c = e, _()) g();else {\n          if (g(), 0 === c.data.length) return;\n          r += e.data.length, m.preview && r > m.preview ? o.abort() : (c.data = c.data[0], p(c, t));\n        }\n      };\n    }\n    function y(e) {\n      return \"greedy\" === m.skipEmptyLines ? \"\" === e.join(\"\").trim() : 1 === e.length && 0 === e[0].length;\n    }\n    function g() {\n      return c && u && (k(\"Delimiter\", \"UndetectableDelimiter\", \"Unable to auto-detect delimiting character; defaulted to '\" + b.DefaultDelimiter + \"'\"), u = !1), m.skipEmptyLines && (c.data = c.data.filter(function (e) {\n        return !y(e);\n      })), _() && function () {\n        if (!c) return;\n        function e(e, t) {\n          J(m.transformHeader) && (e = m.transformHeader(e, t)), l.push(e);\n        }\n        if (Array.isArray(c.data[0])) {\n          for (var t = 0; _() && t < c.data.length; t++) c.data[t].forEach(e);\n          c.data.splice(0, 1);\n        } else c.data.forEach(e);\n      }(), function () {\n        if (!c || !m.header && !m.dynamicTyping && !m.transform) return c;\n        function e(e, t) {\n          var r,\n            i = m.header ? {} : [];\n          for (r = 0; r < e.length; r++) {\n            var n = r,\n              s = e[r];\n            m.header && (n = r >= l.length ? \"__parsed_extra\" : l[r]), m.transform && (s = m.transform(s, n)), s = v(n, s), \"__parsed_extra\" === n ? (i[n] = i[n] || [], i[n].push(s)) : i[n] = s;\n          }\n          return m.header && (r > l.length ? k(\"FieldMismatch\", \"TooManyFields\", \"Too many fields: expected \" + l.length + \" fields but parsed \" + r, f + t) : r < l.length && k(\"FieldMismatch\", \"TooFewFields\", \"Too few fields: expected \" + l.length + \" fields but parsed \" + r, f + t)), i;\n        }\n        var t = 1;\n        !c.data.length || Array.isArray(c.data[0]) ? (c.data = c.data.map(e), t = c.data.length) : c.data = e(c.data, 0);\n        m.header && c.meta && (c.meta.fields = l);\n        return f += t, c;\n      }();\n    }\n    function _() {\n      return m.header && 0 === l.length;\n    }\n    function v(e, t) {\n      return r = e, m.dynamicTypingFunction && void 0 === m.dynamicTyping[r] && (m.dynamicTyping[r] = m.dynamicTypingFunction(r)), !0 === (m.dynamicTyping[r] || m.dynamicTyping) ? \"true\" === t || \"TRUE\" === t || \"false\" !== t && \"FALSE\" !== t && (function (e) {\n        if (s.test(e)) {\n          var t = parseFloat(e);\n          if (n < t && t < i) return !0;\n        }\n        return !1;\n      }(t) ? parseFloat(t) : h.test(t) ? new Date(t) : \"\" === t ? null : t) : t;\n      var r;\n    }\n    function k(e, t, r, i) {\n      var n = {\n        type: e,\n        code: t,\n        message: r\n      };\n      void 0 !== i && (n.row = i), c.errors.push(n);\n    }\n    this.parse = function (e, t, r) {\n      var i = m.quoteChar || '\"';\n      if (m.newline || (m.newline = function (e, t) {\n        e = e.substring(0, 1048576);\n        var r = new RegExp(Q(t) + \"([^]*?)\" + Q(t), \"gm\"),\n          i = (e = e.replace(r, \"\")).split(\"\\r\"),\n          n = e.split(\"\\n\"),\n          s = 1 < n.length && n[0].length < i[0].length;\n        if (1 === i.length || s) return \"\\n\";\n        for (var a = 0, o = 0; o < i.length; o++) \"\\n\" === i[o][0] && a++;\n        return a >= i.length / 2 ? \"\\r\\n\" : \"\\r\";\n      }(e, i)), u = !1, m.delimiter) J(m.delimiter) && (m.delimiter = m.delimiter(e), c.meta.delimiter = m.delimiter);else {\n        var n = function (e, t, r, i, n) {\n          var s, a, o, u;\n          n = n || [\",\", \"\\t\", \"|\", \";\", b.RECORD_SEP, b.UNIT_SEP];\n          for (var h = 0; h < n.length; h++) {\n            var f = n[h],\n              d = 0,\n              l = 0,\n              c = 0;\n            o = void 0;\n            for (var p = new E({\n                comments: i,\n                delimiter: f,\n                newline: t,\n                preview: 10\n              }).parse(e), g = 0; g < p.data.length; g++) if (r && y(p.data[g])) c++;else {\n              var _ = p.data[g].length;\n              l += _, void 0 !== o ? 0 < _ && (d += Math.abs(_ - o), o = _) : o = _;\n            }\n            0 < p.data.length && (l /= p.data.length - c), (void 0 === a || d <= a) && (void 0 === u || u < l) && 1.99 < l && (a = d, s = f, u = l);\n          }\n          return {\n            successful: !!(m.delimiter = s),\n            bestDelimiter: s\n          };\n        }(e, m.newline, m.skipEmptyLines, m.comments, m.delimitersToGuess);\n        n.successful ? m.delimiter = n.bestDelimiter : (u = !0, m.delimiter = b.DefaultDelimiter), c.meta.delimiter = m.delimiter;\n      }\n      var s = w(m);\n      return m.preview && m.header && s.preview++, a = e, o = new E(s), c = o.parse(a, t, r), g(), d ? {\n        meta: {\n          paused: !0\n        }\n      } : c || {\n        meta: {\n          paused: !1\n        }\n      };\n    }, this.paused = function () {\n      return d;\n    }, this.pause = function () {\n      d = !0, o.abort(), a = J(m.chunk) ? \"\" : a.substring(o.getCharIndex());\n    }, this.resume = function () {\n      t.streamer._halted ? (d = !1, t.streamer.parseChunk(a, !0)) : setTimeout(t.resume, 3);\n    }, this.aborted = function () {\n      return e;\n    }, this.abort = function () {\n      e = !0, o.abort(), c.meta.aborted = !0, J(m.complete) && m.complete(c), a = \"\";\n    };\n  }\n  function Q(e) {\n    return e.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  }\n  function E(j) {\n    var z,\n      M = (j = j || {}).delimiter,\n      P = j.newline,\n      U = j.comments,\n      q = j.step,\n      N = j.preview,\n      B = j.fastMode,\n      K = z = void 0 === j.quoteChar || null === j.quoteChar ? '\"' : j.quoteChar;\n    if (void 0 !== j.escapeChar && (K = j.escapeChar), (\"string\" != typeof M || -1 < b.BAD_DELIMITERS.indexOf(M)) && (M = \",\"), U === M) throw new Error(\"Comment character same as delimiter\");\n    !0 === U ? U = \"#\" : (\"string\" != typeof U || -1 < b.BAD_DELIMITERS.indexOf(U)) && (U = !1), \"\\n\" !== P && \"\\r\" !== P && \"\\r\\n\" !== P && (P = \"\\n\");\n    var W = 0,\n      H = !1;\n    this.parse = function (i, t, r) {\n      if (\"string\" != typeof i) throw new Error(\"Input must be a string\");\n      var n = i.length,\n        e = M.length,\n        s = P.length,\n        a = U.length,\n        o = J(q),\n        u = [],\n        h = [],\n        f = [],\n        d = W = 0;\n      if (!i) return L();\n      if (j.header && !t) {\n        var l = i.split(P)[0].split(M),\n          c = [],\n          p = {},\n          g = !1;\n        for (var _ in l) {\n          var m = l[_];\n          J(j.transformHeader) && (m = j.transformHeader(m, _));\n          var y = m,\n            v = p[m] || 0;\n          for (0 < v && (g = !0, y = m + \"_\" + v), p[m] = v + 1; c.includes(y);) y = y + \"_\" + v;\n          c.push(y);\n        }\n        if (g) {\n          var k = i.split(P);\n          k[0] = c.join(M), i = k.join(P);\n        }\n      }\n      if (B || !1 !== B && -1 === i.indexOf(z)) {\n        for (var b = i.split(P), E = 0; E < b.length; E++) {\n          if (f = b[E], W += f.length, E !== b.length - 1) W += P.length;else if (r) return L();\n          if (!U || f.substring(0, a) !== U) {\n            if (o) {\n              if (u = [], I(f.split(M)), F(), H) return L();\n            } else I(f.split(M));\n            if (N && N <= E) return u = u.slice(0, N), L(!0);\n          }\n        }\n        return L();\n      }\n      for (var w = i.indexOf(M, W), R = i.indexOf(P, W), C = new RegExp(Q(K) + Q(z), \"g\"), S = i.indexOf(z, W);;) if (i[W] !== z) {\n        if (U && 0 === f.length && i.substring(W, W + a) === U) {\n          if (-1 === R) return L();\n          W = R + s, R = i.indexOf(P, W), w = i.indexOf(M, W);\n        } else if (-1 !== w && (w < R || -1 === R)) f.push(i.substring(W, w)), W = w + e, w = i.indexOf(M, W);else {\n          if (-1 === R) break;\n          if (f.push(i.substring(W, R)), D(R + s), o && (F(), H)) return L();\n          if (N && u.length >= N) return L(!0);\n        }\n      } else for (S = W, W++;;) {\n        if (-1 === (S = i.indexOf(z, S + 1))) return r || h.push({\n          type: \"Quotes\",\n          code: \"MissingQuotes\",\n          message: \"Quoted field unterminated\",\n          row: u.length,\n          index: W\n        }), T();\n        if (S === n - 1) return T(i.substring(W, S).replace(C, z));\n        if (z !== K || i[S + 1] !== K) {\n          if (z === K || 0 === S || i[S - 1] !== K) {\n            -1 !== w && w < S + 1 && (w = i.indexOf(M, S + 1)), -1 !== R && R < S + 1 && (R = i.indexOf(P, S + 1));\n            var O = A(-1 === R ? w : Math.min(w, R));\n            if (i.substr(S + 1 + O, e) === M) {\n              f.push(i.substring(W, S).replace(C, z)), i[W = S + 1 + O + e] !== z && (S = i.indexOf(z, W)), w = i.indexOf(M, W), R = i.indexOf(P, W);\n              break;\n            }\n            var x = A(R);\n            if (i.substring(S + 1 + x, S + 1 + x + s) === P) {\n              if (f.push(i.substring(W, S).replace(C, z)), D(S + 1 + x + s), w = i.indexOf(M, W), S = i.indexOf(z, W), o && (F(), H)) return L();\n              if (N && u.length >= N) return L(!0);\n              break;\n            }\n            h.push({\n              type: \"Quotes\",\n              code: \"InvalidQuotes\",\n              message: \"Trailing quote on quoted field is malformed\",\n              row: u.length,\n              index: W\n            }), S++;\n          }\n        } else S++;\n      }\n      return T();\n      function I(e) {\n        u.push(e), d = W;\n      }\n      function A(e) {\n        var t = 0;\n        if (-1 !== e) {\n          var r = i.substring(S + 1, e);\n          r && \"\" === r.trim() && (t = r.length);\n        }\n        return t;\n      }\n      function T(e) {\n        return r || (void 0 === e && (e = i.substring(W)), f.push(e), W = n, I(f), o && F()), L();\n      }\n      function D(e) {\n        W = e, I(f), f = [], R = i.indexOf(P, W);\n      }\n      function L(e) {\n        return {\n          data: u,\n          errors: h,\n          meta: {\n            delimiter: M,\n            linebreak: P,\n            aborted: H,\n            truncated: !!e,\n            cursor: d + (t || 0)\n          }\n        };\n      }\n      function F() {\n        q(L()), u = [], h = [];\n      }\n    }, this.abort = function () {\n      H = !0;\n    }, this.getCharIndex = function () {\n      return W;\n    };\n  }\n  function _(e) {\n    var t = e.data,\n      r = a[t.workerId],\n      i = !1;\n    if (t.error) r.userError(t.error, t.file);else if (t.results && t.results.data) {\n      var n = {\n        abort: function () {\n          i = !0, m(t.workerId, {\n            data: [],\n            errors: [],\n            meta: {\n              aborted: !0\n            }\n          });\n        },\n        pause: y,\n        resume: y\n      };\n      if (J(r.userStep)) {\n        for (var s = 0; s < t.results.data.length && (r.userStep({\n          data: t.results.data[s],\n          errors: t.results.errors,\n          meta: t.results.meta\n        }, n), !i); s++);\n        delete t.results;\n      } else J(r.userChunk) && (r.userChunk(t.results, n, t.file), delete t.results);\n    }\n    t.finished && !i && m(t.workerId, t.results);\n  }\n  function m(e, t) {\n    var r = a[e];\n    J(r.userComplete) && r.userComplete(t), r.terminate(), delete a[e];\n  }\n  function y() {\n    throw new Error(\"Not implemented.\");\n  }\n  function w(e) {\n    if (\"object\" != typeof e || null === e) return e;\n    var t = Array.isArray(e) ? [] : {};\n    for (var r in e) t[r] = w(e[r]);\n    return t;\n  }\n  function v(e, t) {\n    return function () {\n      e.apply(t, arguments);\n    };\n  }\n  function J(e) {\n    return \"function\" == typeof e;\n  }\n  return o && (f.onmessage = function (e) {\n    var t = e.data;\n    void 0 === b.WORKER_ID && t && (b.WORKER_ID = t.workerId);\n    if (\"string\" == typeof t.input) f.postMessage({\n      workerId: b.WORKER_ID,\n      results: b.parse(t.input, t.config),\n      finished: !0\n    });else if (f.File && t.input instanceof File || t.input instanceof Object) {\n      var r = b.parse(t.input, t.config);\n      r && f.postMessage({\n        workerId: b.WORKER_ID,\n        results: r,\n        finished: !0\n      });\n    }\n  }), (l.prototype = Object.create(h.prototype)).constructor = l, (c.prototype = Object.create(h.prototype)).constructor = c, (p.prototype = Object.create(p.prototype)).constructor = p, (g.prototype = Object.create(h.prototype)).constructor = g, b;\n});","map":null,"metadata":{},"sourceType":"script"}