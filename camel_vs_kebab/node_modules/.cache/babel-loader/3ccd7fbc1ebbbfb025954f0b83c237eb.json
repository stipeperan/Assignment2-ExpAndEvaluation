{"ast":null,"code":"var _jsxFileName = \"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/camel-vs-kebab/src/components/Experiment.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Papa from \"papaparse\";\nimport DataContext from \"../context/DataContext\";\nfunction Experiment() {\n  const {\n    formData,\n    taskData,\n    setTaskData,\n    setCsvData\n  } = useContext(DataContext);\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [countdown, setCountdown] = useState(3);\n  const [feedbackColor, setFeedbackColor] = useState({});\n  const [disableButtons, setDisableButtons] = useState(false);\n  const [shuffledOptions, setShuffledOptions] = useState([]);\n  const navigate = useNavigate();\n  const tasks = [{\n    identifier: \"moveSouth\",\n    type: \"camelCase\",\n    distractors: [\"moveSource\", \"moreSouth\", \"moverSound\"],\n    sentence: \"move south\"\n  }, {\n    identifier: \"calculateTotal\",\n    type: \"camelCase\",\n    distractors: [\"calculateSum\", \"totalCalculation\", \"sumCalculate\"],\n    sentence: \"calculate total\"\n  }, {\n    identifier: \"userLoginDetails\",\n    type: \"camelCase\",\n    distractors: [\"userDetails\", \"loginUserDetails\", \"userLogins\"],\n    sentence: \"user login details\"\n  }, {\n    identifier: \"move-south\",\n    type: \"kebabCase\",\n    distractors: [\"move-source\", \"more-south\", \"mover-sound\"],\n    sentence: \"move south\"\n  }, {\n    identifier: \"calculate-total\",\n    type: \"kebabCase\",\n    distractors: [\"calculate-sum\", \"total-calculation\", \"sum-calculate\"],\n    sentence: \"calculate total\"\n  }, {\n    identifier: \"user-login-details\",\n    type: \"kebabCase\",\n    distractors: [\"user-details\", \"login-user-details\", \"user-logins\"],\n    sentence: \"user login details\"\n  }];\n  useEffect(() => {\n    if (countdown > 0) {\n      const timer = setTimeout(() => setCountdown(countdown - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (startTime === null) {\n      setStartTime(Date.now());\n    }\n  }, [countdown, startTime]);\n  useEffect(() => {\n    // Shuffle options only once when the task changes\n    const options = [tasks[currentTaskIndex].identifier, ...tasks[currentTaskIndex].distractors];\n    setShuffledOptions(options.sort(() => Math.random() - 0.5));\n  }, [currentTaskIndex]);\n  const handleOptionClick = (isCorrect, option) => {\n    const endTime = Date.now();\n    const timeTaken = endTime - startTime;\n    if (isCorrect) {\n      setFeedbackColor({\n        [option]: \"green\"\n      });\n      setDisableButtons(true);\n\n      // Save task data\n      setTaskData(prev => [...prev, {\n        ...tasks[currentTaskIndex],\n        timeTaken,\n        isCorrect: true\n      }]);\n\n      // Proceed to the next task after a short delay\n      setTimeout(() => {\n        if (currentTaskIndex + 1 < tasks.length) {\n          setCurrentTaskIndex(currentTaskIndex + 1);\n          setStartTime(Date.now());\n          setFeedbackColor({});\n          setDisableButtons(false);\n        } else {\n          generateCsvData();\n          navigate(\"/results\");\n        }\n      }, 1000);\n    } else {\n      setFeedbackColor({\n        [option]: \"red\"\n      });\n\n      // Save incorrect attempt\n      setTaskData(prev => [...prev, {\n        ...tasks[currentTaskIndex],\n        timeTaken,\n        isCorrect: false\n      }]);\n    }\n  };\n  const generateCsvData = () => {\n    const csvContent = Papa.unparse(taskData.map(task => ({\n      name: formData.name,\n      age: formData.age,\n      experience: formData.experience,\n      identifier: task.identifier,\n      type: task.type,\n      timeTaken: task.timeTaken,\n      isCorrect: task.isCorrect\n    })));\n    setCsvData(csvContent);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \"Experiment\")), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, countdown > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"The experiment will start in:\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, countdown)) : currentTaskIndex < tasks.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"Identify the corresponding identifier for:\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, tasks[currentTaskIndex].sentence)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, shuffledOptions.map((option, index) => /*#__PURE__*/React.createElement(\"button\", {\n    key: index,\n    className: \"card-button\",\n    onClick: () => handleOptionClick(option === tasks[currentTaskIndex].identifier, option),\n    style: {\n      backgroundColor: feedbackColor[option] || \"initial\",\n      pointerEvents: disableButtons ? \"none\" : \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, option))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"Task \", currentTaskIndex + 1, \" of \", tasks.length)) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"Experiment completed!\")));\n}\nexport default Experiment;","map":{"version":3,"names":["React","useContext","useState","useEffect","useNavigate","Papa","DataContext","Experiment","formData","taskData","setTaskData","setCsvData","currentTaskIndex","setCurrentTaskIndex","startTime","setStartTime","countdown","setCountdown","feedbackColor","setFeedbackColor","disableButtons","setDisableButtons","shuffledOptions","setShuffledOptions","navigate","tasks","identifier","type","distractors","sentence","timer","setTimeout","clearTimeout","Date","now","options","sort","Math","random","handleOptionClick","isCorrect","option","endTime","timeTaken","prev","length","generateCsvData","csvContent","unparse","map","task","name","age","experience","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","index","key","onClick","style","backgroundColor","pointerEvents"],"sources":["/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/camel-vs-kebab/src/components/Experiment.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Papa from \"papaparse\";\nimport DataContext from \"../context/DataContext\";\n\nfunction Experiment() {\n  const { formData, taskData, setTaskData, setCsvData } = useContext(DataContext);\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [countdown, setCountdown] = useState(3);\n  const [feedbackColor, setFeedbackColor] = useState({});\n  const [disableButtons, setDisableButtons] = useState(false);\n  const [shuffledOptions, setShuffledOptions] = useState([]);\n  const navigate = useNavigate();\n\n  const tasks = [\n    {\n      identifier: \"moveSouth\",\n      type: \"camelCase\",\n      distractors: [\"moveSource\", \"moreSouth\", \"moverSound\"],\n      sentence: \"move south\",\n    },\n    {\n      identifier: \"calculateTotal\",\n      type: \"camelCase\",\n      distractors: [\"calculateSum\", \"totalCalculation\", \"sumCalculate\"],\n      sentence: \"calculate total\",\n    },\n    {\n      identifier: \"userLoginDetails\",\n      type: \"camelCase\",\n      distractors: [\"userDetails\", \"loginUserDetails\", \"userLogins\"],\n      sentence: \"user login details\",\n    },\n    {\n      identifier: \"move-south\",\n      type: \"kebabCase\",\n      distractors: [\"move-source\", \"more-south\", \"mover-sound\"],\n      sentence: \"move south\",\n    },\n    {\n      identifier: \"calculate-total\",\n      type: \"kebabCase\",\n      distractors: [\"calculate-sum\", \"total-calculation\", \"sum-calculate\"],\n      sentence: \"calculate total\",\n    },\n    {\n      identifier: \"user-login-details\",\n      type: \"kebabCase\",\n      distractors: [\"user-details\", \"login-user-details\", \"user-logins\"],\n      sentence: \"user login details\",\n    },\n  ];\n\n  useEffect(() => {\n    if (countdown > 0) {\n      const timer = setTimeout(() => setCountdown(countdown - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (startTime === null) {\n      setStartTime(Date.now());\n    }\n  }, [countdown, startTime]);\n\n  useEffect(() => {\n    // Shuffle options only once when the task changes\n    const options = [tasks[currentTaskIndex].identifier, ...tasks[currentTaskIndex].distractors];\n    setShuffledOptions(options.sort(() => Math.random() - 0.5));\n  }, [currentTaskIndex]);\n\n  const handleOptionClick = (isCorrect, option) => {\n    const endTime = Date.now();\n    const timeTaken = endTime - startTime;\n\n    if (isCorrect) {\n      setFeedbackColor({ [option]: \"green\" });\n      setDisableButtons(true);\n\n      // Save task data\n      setTaskData((prev) => [\n        ...prev,\n        {\n          ...tasks[currentTaskIndex],\n          timeTaken,\n          isCorrect: true,\n        },\n      ]);\n\n      // Proceed to the next task after a short delay\n      setTimeout(() => {\n        if (currentTaskIndex + 1 < tasks.length) {\n          setCurrentTaskIndex(currentTaskIndex + 1);\n          setStartTime(Date.now());\n          setFeedbackColor({});\n          setDisableButtons(false);\n        } else {\n          generateCsvData();\n          navigate(\"/results\");\n        }\n      }, 1000);\n    } else {\n      setFeedbackColor({ [option]: \"red\" });\n\n      // Save incorrect attempt\n      setTaskData((prev) => [\n        ...prev,\n        {\n          ...tasks[currentTaskIndex],\n          timeTaken,\n          isCorrect: false,\n        },\n      ]);\n    }\n  };\n\n  const generateCsvData = () => {\n    const csvContent = Papa.unparse(\n      taskData.map((task) => ({\n        name: formData.name,\n        age: formData.age,\n        experience: formData.experience,\n        identifier: task.identifier,\n        type: task.type,\n        timeTaken: task.timeTaken,\n        isCorrect: task.isCorrect,\n      }))\n    );\n\n    setCsvData(csvContent);\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>Experiment</h1>\n      </header>\n      <main>\n        {countdown > 0 ? (\n          <div>\n            <h1>The experiment will start in:</h1>\n            <h1>{countdown}</h1>\n          </div>\n        ) : currentTaskIndex < tasks.length ? (\n          <div>\n            <p>\n              Identify the corresponding identifier for:\n            </p>\n            <h1>\n              <strong>{tasks[currentTaskIndex].sentence}</strong>\n            </h1>\n            <div className=\"card-grid\">\n              {shuffledOptions.map((option, index) => (\n                <button\n                  key={index}\n                  className=\"card-button\"\n                  onClick={() =>\n                    handleOptionClick(option === tasks[currentTaskIndex].identifier, option)\n                  }\n                  style={{\n                    backgroundColor: feedbackColor[option] || \"initial\",\n                    pointerEvents: disableButtons ? \"none\" : \"auto\",\n                  }}\n                >\n                  {option}\n                </button>\n              ))}\n            </div>\n            <p>Task {currentTaskIndex + 1} of {tasks.length}</p>\n          </div>\n        ) : (\n          <p>Experiment completed!</p>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default Experiment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}