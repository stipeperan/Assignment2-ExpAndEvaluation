{"ast":null,"code":"var _jsxFileName = \"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/camel-vs-kebab/src/components/Experiment.js\";\nimport React, { useContext, useState } from 'react';\nimport DataContext from '../context/DataContext';\nfunction Experiment() {\n  const {\n    taskData,\n    setTaskData\n  } = useContext(DataContext);\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const tasks = [{\n    identifier: 'camelCaseExample',\n    type: 'camelCase'\n  }, {\n    identifier: 'kebab-case-example',\n    type: 'kebabCase'\n  }\n  // Add more tasks here\n  ];\n\n  //   const handleStartTask = () => {\n  //     setStartTime(Date.now());\n  //   };\n\n  const handleCompleteTask = isCorrect => {\n    const endTime = Date.now();\n    const timeTaken = endTime - startTime;\n    setTaskData(prev => [...prev, {\n      ...tasks[currentTaskIndex],\n      timeTaken,\n      isCorrect\n    }]);\n    if (currentTaskIndex + 1 < tasks.length) {\n      setCurrentTaskIndex(currentTaskIndex + 1);\n      setStartTime(Date.now()); // Start the timer for the next task\n    } else {\n      console.log('All tasks completed', taskData);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Experiment\")), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, currentTaskIndex < tasks.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Identify the task: \", tasks[currentTaskIndex].identifier), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleCompleteTask(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Correct\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleCompleteTask(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Incorrect\")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Experiment completed!\")));\n}\nexport default Experiment;","map":{"version":3,"names":["React","useContext","useState","DataContext","Experiment","taskData","setTaskData","currentTaskIndex","setCurrentTaskIndex","startTime","setStartTime","tasks","identifier","type","handleCompleteTask","isCorrect","endTime","Date","now","timeTaken","prev","length","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/camel-vs-kebab/src/components/Experiment.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport DataContext from '../context/DataContext';\n\nfunction Experiment() {\n  const { taskData, setTaskData } = useContext(DataContext);\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n\n  const tasks = [\n    { identifier: 'camelCaseExample', type: 'camelCase' },\n    { identifier: 'kebab-case-example', type: 'kebabCase' },\n    // Add more tasks here\n  ];\n\n//   const handleStartTask = () => {\n//     setStartTime(Date.now());\n//   };\n\n  const handleCompleteTask = (isCorrect) => {\n    const endTime = Date.now();\n    const timeTaken = endTime - startTime;\n\n    setTaskData((prev) => [\n      ...prev,\n      {\n        ...tasks[currentTaskIndex],\n        timeTaken,\n        isCorrect,\n      },\n    ]);\n\n    if (currentTaskIndex + 1 < tasks.length) {\n      setCurrentTaskIndex(currentTaskIndex + 1);\n      setStartTime(Date.now()); // Start the timer for the next task\n    } else {\n      console.log('All tasks completed', taskData);\n    }\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>Experiment</h1>\n      </header>\n      <main>\n        {currentTaskIndex < tasks.length ? (\n          <div>\n            <p>Identify the task: {tasks[currentTaskIndex].identifier}</p>\n            <button onClick={() => handleCompleteTask(true)}>Correct</button>\n            <button onClick={() => handleCompleteTask(false)}>Incorrect</button>\n          </div>\n        ) : (\n          <p>Experiment completed!</p>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default Experiment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}