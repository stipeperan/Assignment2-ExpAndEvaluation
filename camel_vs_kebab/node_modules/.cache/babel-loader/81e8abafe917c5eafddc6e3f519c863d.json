{"ast":null,"code":"var _jsxFileName = \"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/camel-vs-kebab/src/components/Experiment.js\";\nimport React, { useContext, useState } from 'react';\nimport Papa from 'papaparse';\nimport DataContext from '../context/DataContext';\nfunction Experiment() {\n  const {\n    formData,\n    taskData,\n    setTaskData\n  } = useContext(DataContext);\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const tasks = [{\n    identifier: 'camelCaseExample',\n    type: 'camelCase'\n  }, {\n    identifier: 'kebab-case-example',\n    type: 'kebabCase'\n  }];\n  const handleStartTask = () => {\n    setStartTime(Date.now());\n  };\n  const handleCompleteTask = isCorrect => {\n    const endTime = Date.now();\n    const timeTaken = endTime - startTime;\n    setTaskData(prev => [...prev, {\n      ...tasks[currentTaskIndex],\n      timeTaken,\n      isCorrect\n    }]);\n    if (currentTaskIndex + 1 < tasks.length) {\n      setCurrentTaskIndex(currentTaskIndex + 1);\n    } else {\n      downloadCSV();\n    }\n  };\n  const downloadCSV = () => {\n    const csvData = Papa.unparse(taskData.map(task => ({\n      name: formData.name,\n      age: formData.age,\n      experience: formData.experience,\n      identifier: task.identifier,\n      type: task.type,\n      timeTaken: task.timeTaken,\n      isCorrect: task.isCorrect\n    })));\n    const blob = new Blob([csvData], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', 'experiment_results.csv');\n    link.click();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Experiment\")), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, currentTaskIndex < tasks.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Identify the task: \", tasks[currentTaskIndex].identifier), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleCompleteTask(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Correct\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleCompleteTask(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Incorrect\")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Experiment completed!\")));\n}\nexport default Experiment;","map":{"version":3,"names":["React","useContext","useState","Papa","DataContext","Experiment","formData","taskData","setTaskData","currentTaskIndex","setCurrentTaskIndex","startTime","setStartTime","tasks","identifier","type","handleStartTask","Date","now","handleCompleteTask","isCorrect","endTime","timeTaken","prev","length","downloadCSV","csvData","unparse","map","task","name","age","experience","blob","Blob","url","URL","createObjectURL","link","document","createElement","setAttribute","click","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/camel-vs-kebab/src/components/Experiment.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport Papa from 'papaparse';\nimport DataContext from '../context/DataContext';\n\nfunction Experiment() {\n  const { formData, taskData, setTaskData } = useContext(DataContext);\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n\n  const tasks = [\n    { identifier: 'camelCaseExample', type: 'camelCase' },\n    { identifier: 'kebab-case-example', type: 'kebabCase' },\n  ];\n\n  const handleStartTask = () => {\n    setStartTime(Date.now());\n  };\n\n  const handleCompleteTask = (isCorrect) => {\n    const endTime = Date.now();\n    const timeTaken = endTime - startTime;\n\n    setTaskData((prev) => [\n      ...prev,\n      {\n        ...tasks[currentTaskIndex],\n        timeTaken,\n        isCorrect,\n      },\n    ]);\n\n    if (currentTaskIndex + 1 < tasks.length) {\n      setCurrentTaskIndex(currentTaskIndex + 1);\n    } else {\n      downloadCSV();\n    }\n  };\n\n  const downloadCSV = () => {\n    const csvData = Papa.unparse(\n      taskData.map((task) => ({\n        name: formData.name,\n        age: formData.age,\n        experience: formData.experience,\n        identifier: task.identifier,\n        type: task.type,\n        timeTaken: task.timeTaken,\n        isCorrect: task.isCorrect,\n      }))\n    );\n\n    const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', 'experiment_results.csv');\n    link.click();\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>Experiment</h1>\n      </header>\n      <main>\n        {currentTaskIndex < tasks.length ? (\n          <div>\n            <p>Identify the task: {tasks[currentTaskIndex].identifier}</p>\n            <button onClick={() => handleCompleteTask(true)}>Correct</button>\n            <button onClick={() => handleCompleteTask(false)}>Incorrect</button>\n          </div>\n        ) : (\n          <p>Experiment completed!</p>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default Experiment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}