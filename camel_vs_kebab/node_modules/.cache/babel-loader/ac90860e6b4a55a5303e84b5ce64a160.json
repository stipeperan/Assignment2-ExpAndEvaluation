{"ast":null,"code":"var _jsxFileName = \"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/Assignment2-ExpAndEvaluation/camel_vs_kebab/src/components/Results.js\";\nimport React, { useContext, useEffect } from 'react';\nimport DataContext from '../context/DataContext';\nimport Papa from 'papaparse';\nfunction downloadCSV(taskData, formData) {\n  const csvData = Papa.unparse(taskData.map(task => ({\n    age: formData.age,\n    experience: formData.experience,\n    identifier: task.identifier,\n    type: task.type,\n    timeTaken: task.timeTaken\n  })));\n  const blob = new Blob([csvData], {\n    type: 'text/csv;charset=utf-8;'\n  });\n  const url = URL.createObjectURL(blob);\n\n  // Append the participant's name to the filename\n  const participantName = formData.name || 'participant';\n  const filename = `experiment_results_${participantName}.csv`;\n  const link = document.createElement('a');\n  link.setAttribute('href', url);\n  link.setAttribute('download', filename);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\nfunction ResultPage() {\n  const {\n    taskData,\n    formData\n  } = useContext(DataContext);\n\n  // Automatically download the CSV file when the component mounts\n  useEffect(() => {\n    if (taskData && formData) {\n      downloadCSV(taskData, formData);\n    }\n  }, [taskData, formData]);\n\n  // Calculate total and average times\n  const totalOverallTime = taskData.reduce((sum, task) => sum + task.timeTaken, 0);\n  const camelCaseTasks = taskData.filter(task => /^[a-z]+([A-Z][a-z]+)+$/.test(task.type));\n  const kebabCaseTasks = taskData.filter(task => /^[a-z]+(-[a-z]+)+$/.test(task.type));\n  const totalCamelCaseTime = camelCaseTasks.reduce((sum, task) => sum + task.timeTaken, 0);\n  const totalKebabCaseTime = kebabCaseTasks.reduce((sum, task) => sum + task.timeTaken, 0);\n  const avgCamelCaseTime = camelCaseTasks.length ? (totalCamelCaseTime / camelCaseTasks.length).toFixed(2) : 0;\n  const avgKebabCaseTime = kebabCaseTasks.length ? (totalKebabCaseTime / kebabCaseTasks.length).toFixed(2) : 0;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Experiment Results\")), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Thank you for participating in the experiment!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Summary\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Total time overall: \", totalOverallTime, \"ms\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Average time for camelCase tasks: \", avgCamelCaseTime, \"ms\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Average time for kebab-case tasks: \", avgKebabCaseTime, \"ms\"))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Experimentation & Evaluation - 2024\")));\n}\nexport default ResultPage;","map":{"version":3,"names":["React","useContext","useEffect","DataContext","Papa","downloadCSV","taskData","formData","csvData","unparse","map","task","age","experience","identifier","type","timeTaken","blob","Blob","url","URL","createObjectURL","participantName","name","filename","link","document","createElement","setAttribute","body","appendChild","click","removeChild","ResultPage","totalOverallTime","reduce","sum","camelCaseTasks","filter","test","kebabCaseTasks","totalCamelCaseTime","totalKebabCaseTime","avgCamelCaseTime","length","toFixed","avgKebabCaseTime","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/Assignment2-ExpAndEvaluation/camel_vs_kebab/src/components/Results.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport DataContext from '../context/DataContext';\nimport Papa from 'papaparse';\n\nfunction downloadCSV(taskData, formData) {\n    const csvData = Papa.unparse(\n        taskData.map((task) => ({\n            age: formData.age,\n            experience: formData.experience,\n            identifier: task.identifier,\n            type: task.type,\n            timeTaken: task.timeTaken,\n        }))\n    );\n\n    const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n\n    // Append the participant's name to the filename\n    const participantName = formData.name || 'participant';\n    const filename = `experiment_results_${participantName}.csv`;\n\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', filename);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n}\n\nfunction ResultPage() {\n    const { taskData, formData } = useContext(DataContext);\n\n    // Automatically download the CSV file when the component mounts\n    useEffect(() => {\n        if (taskData && formData) {\n            downloadCSV(taskData, formData);\n        }\n    }, [taskData, formData]);\n\n    // Calculate total and average times\n    const totalOverallTime = taskData.reduce((sum, task) => sum + task.timeTaken, 0);\n\n    const camelCaseTasks = taskData.filter((task) =>\n        /^[a-z]+([A-Z][a-z]+)+$/.test(task.type)\n    );\n    const kebabCaseTasks = taskData.filter((task) =>\n        /^[a-z]+(-[a-z]+)+$/.test(task.type)\n    );\n\n    const totalCamelCaseTime = camelCaseTasks.reduce((sum, task) => sum + task.timeTaken, 0);\n    const totalKebabCaseTime = kebabCaseTasks.reduce((sum, task) => sum + task.timeTaken, 0);\n\n    const avgCamelCaseTime = camelCaseTasks.length ? (totalCamelCaseTime / camelCaseTasks.length).toFixed(2) : 0;\n    const avgKebabCaseTime = kebabCaseTasks.length ? (totalKebabCaseTime / kebabCaseTasks.length).toFixed(2) : 0;\n\n    return (\n        <div>\n            <header>\n                <h1>Experiment Results</h1>\n            </header>\n            <main>\n                <h3>Thank you for participating in the experiment!</h3>\n                <h3>Summary</h3>\n                <ul>\n                    <li>Total time overall: {totalOverallTime}ms</li>\n                    <li>Average time for camelCase tasks: {avgCamelCaseTime}ms</li>\n                    <li>Average time for kebab-case tasks: {avgKebabCaseTime}ms</li>\n                </ul>\n            </main>\n            <footer>\n                <p>Experimentation & Evaluation - 2024</p>\n            </footer>\n        </div>\n    );\n}\n\nexport default ResultPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}