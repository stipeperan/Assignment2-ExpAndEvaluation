{"ast":null,"code":"var _jsxFileName = \"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/Assignment2-ExpAndEvaluation/camel_vs_kebab/src/components/Experiment.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Papa from \"papaparse\";\nimport DataContext from \"../context/DataContext\";\nfunction Experiment() {\n  const {\n    formData,\n    taskData,\n    setTaskData,\n    setCsvData\n  } = useContext(DataContext);\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [countdown, setCountdown] = useState(3);\n  const [feedbackColor, setFeedbackColor] = useState({});\n  const [disableButtons, setDisableButtons] = useState(false);\n  const [shuffledOptions, setShuffledOptions] = useState([]);\n  const [incorrectOptions, setIncorrectOptions] = useState([]);\n  const [shuffledTasks, setShuffledTasks] = useState([]); // State to store shuffled tasks\n  const navigate = useNavigate();\n  const tasks = [\n  // Task objects (unchanged)\n  {\n    identifier: \"moveSouth\",\n    type: \"camelCase\",\n    distractors: [\"moveSource\", \"moreSouth\", \"moverSound\"],\n    sentence: \"move south\"\n  }, {\n    identifier: \"move-south\",\n    type: \"kebabCase\",\n    distractors: [\"move-source\", \"more-south\", \"mover-sound\"],\n    sentence: \"move south\"\n  }, {\n    identifier: \"calculateTotal\",\n    type: \"camelCase\",\n    distractors: [\"calculateSum\", \"totalCalculation\", \"sumCalculate\"],\n    sentence: \"calculate total\"\n  }, {\n    identifier: \"calculate-total\",\n    type: \"kebabCase\",\n    distractors: [\"calculate-sum\", \"total-calculation\", \"sum-calculate\"],\n    sentence: \"calculate total\"\n  }, {\n    identifier: \"userLoginDetails\",\n    type: \"camelCase\",\n    distractors: [\"userDetails\", \"loginUserDetails\", \"userLogins\"],\n    sentence: \"user login details\"\n  }, {\n    identifier: \"user-login-details\",\n    type: \"kebabCase\",\n    distractors: [\"user-details\", \"login-user-details\", \"user-logins\"],\n    sentence: \"user login details\"\n  }, {\n    identifier: \"sendMessage\",\n    type: \"camelCase\",\n    distractors: [\"seedMastodon\", \"sandMessenger\", \"deliverMessage\"],\n    sentence: \"send message\"\n  }, {\n    identifier: \"send-message\",\n    type: \"kebabCase\",\n    distractors: [\"seed-mastodon\", \"sand-messenger\", \"deliver-message\"],\n    sentence: \"send message\"\n  }, {\n    identifier: \"startProcess\",\n    type: \"camelCase\",\n    distractors: [\"processStart\", \"initiateProcess\", \"streamProcess\"],\n    sentence: \"start process\"\n  }, {\n    identifier: \"start-process\",\n    type: \"kebabCase\",\n    distractors: [\"process-start\", \"initiates-process\", \"stream-process\"],\n    sentence: \"start process\"\n  }, {\n    identifier: \"refreshPage\",\n    type: \"kebabCase\",\n    distractors: [\"reloadPage\", \"resetPage\", \"updatePage\"],\n    sentence: \"refresh page\"\n  }, {\n    identifier: \"refresh-page\",\n    type: \"kebabCase\",\n    distractors: [\"reload-page\", \"reset-page\", \"update-page\"],\n    sentence: \"refresh page\"\n  }, {\n    identifier: \"noPainNoGain\",\n    type: \"camelCase\",\n    distractors: [\"noPaceNoTaste\", \"noPainNogain\", \"noPastNoGassed\"],\n    sentence: \"no pain no gain\"\n  }, {\n    identifier: \"no-pain-no-gain\",\n    type: \"kebabCase\",\n    distractors: [\"no-pace-no-taste\", \"no-pane-no-gain\", \"no-past-no-gassed\"],\n    sentence: \"no pain no gain\"\n  }, {\n    identifier: \"asSoonAsPossible\",\n    type: \"camelCase\",\n    distractors: [\"asSoonPossible\", \"soonAsPossible\", \"asSoupAsPossible\"],\n    sentence: \"as soon as possible\"\n  }, {\n    identifier: \"as-soon-as-possible\",\n    type: \"kebabCase\",\n    distractors: [\"as-soon-possible\", \"soon-as-possible\", \"as-soup-as-possible\"],\n    sentence: \"as soon as possible\"\n  }, {\n    identifier: \"appleCare\",\n    type: \"camelCase\",\n    distractors: [\"appleStare\", \"apleCare\", \"apppleCare\"],\n    sentence: \"apple care\"\n  }, {\n    identifier: \"apple-care\",\n    type: \"kebabCase\",\n    distractors: [\"apple-stare\", \"aple-care\", \"appple-care\"],\n    sentence: \"apple care\"\n  }, {\n    identifier: \"ciao-a-tutti\",\n    type: \"kebabCase\",\n    distractors: [\"ciao-tutti\", \"ciao-ai-brutti\", \"cioa-a-tutti\"],\n    sentence: \"ciao a tutti\"\n  }, {\n    identifier: \"ciaoATutti\",\n    type: \"camelCase\",\n    distractors: [\"ciaoTutti\", \"ciaoAiBrutti\", \"cioaATutti\"],\n    sentence: \"ciao a tutti\"\n  }];\n  useEffect(() => {\n    // Shuffle tasks when the component mounts\n    const shuffled = tasks.sort(() => Math.random() - 0.5);\n    setShuffledTasks(shuffled);\n    setTaskData([]); // Clear previous experiment data\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setTaskData]); // Runs only when component mounts or setTaskData changes\n\n  useEffect(() => {\n    if (countdown > 0) {\n      const timer = setTimeout(() => setCountdown(countdown - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (startTime === null) {\n      setStartTime(Date.now());\n    }\n  }, [countdown, startTime]);\n  useEffect(() => {\n    if (shuffledTasks && shuffledTasks.length > 0) {\n      const options = [shuffledTasks[currentTaskIndex].identifier, ...shuffledTasks[currentTaskIndex].distractors];\n      setShuffledOptions(options.sort(() => Math.random() - 0.5));\n      setIncorrectOptions([]);\n    }\n  }, [currentTaskIndex, shuffledTasks]);\n  const handleOptionClick = (isCorrect, option) => {\n    const endTime = Date.now();\n    const timeTaken = endTime - startTime;\n    if (disableButtons) return;\n    if (isCorrect) {\n      setFeedbackColor({\n        [option]: \"green\"\n      });\n      setDisableButtons(true);\n      setTaskData(prev => {\n        const updatedData = prev.filter(task => task.identifier !== shuffledTasks[currentTaskIndex].identifier);\n        return [...updatedData, {\n          ...shuffledTasks[currentTaskIndex],\n          timeTaken,\n          isCorrect: true\n        }];\n      });\n      setTimeout(() => {\n        if (currentTaskIndex + 1 < shuffledTasks.length) {\n          setCurrentTaskIndex(currentTaskIndex + 1);\n          setStartTime(Date.now());\n          setFeedbackColor({});\n          setDisableButtons(false);\n        } else {\n          generateCsvData();\n          navigate(\"/results\");\n        }\n      }, 1000);\n    } else {\n      if (!disableButtons) {\n        setTaskData(prev => {\n          const existingTask = prev.find(task => task.identifier === shuffledTasks[currentTaskIndex].identifier);\n          if (existingTask && existingTask.isCorrect) {\n            return prev;\n          }\n          const updatedData = prev.filter(task => task.identifier !== shuffledTasks[currentTaskIndex].identifier);\n          return [...updatedData, {\n            ...shuffledTasks[currentTaskIndex],\n            timeTaken,\n            isCorrect: false\n          }];\n        });\n      }\n      setIncorrectOptions(prev => [...prev, option]);\n    }\n  };\n  const generateCsvData = () => {\n    const csvContent = Papa.unparse(taskData.map(task => ({\n      name: formData.name,\n      age: formData.age,\n      experience: formData.experience,\n      identifier: task.identifier,\n      type: task.type,\n      timeTaken: task.timeTaken,\n      isCorrect: task.isCorrect\n    })));\n    setCsvData(csvContent);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, \"Experiment\")), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, countdown > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, \"The experiment will start in:\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, countdown)) : currentTaskIndex < shuffledTasks.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  }, \"Identify the corresponding identifier for:\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 19\n    }\n  }, shuffledTasks[currentTaskIndex].sentence)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, shuffledOptions.map((option, index) => /*#__PURE__*/React.createElement(\"button\", {\n    key: index,\n    className: \"card-button\",\n    onClick: () => handleOptionClick(option === shuffledTasks[currentTaskIndex].identifier, option),\n    style: {\n      backgroundColor: feedbackColor[option] || (incorrectOptions.includes(option) ? \"red\" : \"\"),\n      pointerEvents: disableButtons ? \"none\" : \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 23\n    }\n  }, option))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }, \"Task \", currentTaskIndex + 1, \" of \", shuffledTasks.length)) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }, \"Experiment completed!\")));\n}\nexport default Experiment;","map":{"version":3,"names":["React","useContext","useState","useEffect","useNavigate","Papa","DataContext","Experiment","formData","taskData","setTaskData","setCsvData","currentTaskIndex","setCurrentTaskIndex","startTime","setStartTime","countdown","setCountdown","feedbackColor","setFeedbackColor","disableButtons","setDisableButtons","shuffledOptions","setShuffledOptions","incorrectOptions","setIncorrectOptions","shuffledTasks","setShuffledTasks","navigate","tasks","identifier","type","distractors","sentence","shuffled","sort","Math","random","timer","setTimeout","clearTimeout","Date","now","length","options","handleOptionClick","isCorrect","option","endTime","timeTaken","prev","updatedData","filter","task","generateCsvData","existingTask","find","csvContent","unparse","map","name","age","experience","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","index","key","onClick","style","backgroundColor","includes","pointerEvents"],"sources":["/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/Assignment2-ExpAndEvaluation/camel_vs_kebab/src/components/Experiment.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Papa from \"papaparse\";\nimport DataContext from \"../context/DataContext\";\n\nfunction Experiment() {\n  const { formData, taskData, setTaskData, setCsvData } = useContext(DataContext);\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [countdown, setCountdown] = useState(3);\n  const [feedbackColor, setFeedbackColor] = useState({});\n  const [disableButtons, setDisableButtons] = useState(false);\n  const [shuffledOptions, setShuffledOptions] = useState([]);\n  const [incorrectOptions, setIncorrectOptions] = useState([]);\n  const [shuffledTasks, setShuffledTasks] = useState([]); // State to store shuffled tasks\n  const navigate = useNavigate();\n\n  const tasks = [\n    // Task objects (unchanged)\n    {\n      identifier: \"moveSouth\",\n      type: \"camelCase\",\n      distractors: [\"moveSource\", \"moreSouth\", \"moverSound\"],\n      sentence: \"move south\",\n    },\n    {\n      identifier: \"move-south\",\n      type: \"kebabCase\",\n      distractors: [\"move-source\", \"more-south\", \"mover-sound\"],\n      sentence: \"move south\",\n    },\n    {\n      identifier: \"calculateTotal\",\n      type: \"camelCase\",\n      distractors: [\"calculateSum\", \"totalCalculation\", \"sumCalculate\"],\n      sentence: \"calculate total\",\n    },\n    {\n      identifier: \"calculate-total\",\n      type: \"kebabCase\",\n      distractors: [\"calculate-sum\", \"total-calculation\", \"sum-calculate\"],\n      sentence: \"calculate total\",\n    },\n    {\n      identifier: \"userLoginDetails\",\n      type: \"camelCase\",\n      distractors: [\"userDetails\", \"loginUserDetails\", \"userLogins\"],\n      sentence: \"user login details\",\n    },\n    {\n      identifier: \"user-login-details\",\n      type: \"kebabCase\",\n      distractors: [\"user-details\", \"login-user-details\", \"user-logins\"],\n      sentence: \"user login details\",\n    },\n    {\n      identifier: \"sendMessage\",\n      type: \"camelCase\",\n      distractors: [\"seedMastodon\", \"sandMessenger\", \"deliverMessage\"],\n      sentence: \"send message\",\n    },\n    {\n      identifier: \"send-message\",\n      type: \"kebabCase\",\n      distractors: [\"seed-mastodon\", \"sand-messenger\", \"deliver-message\"],\n      sentence: \"send message\",\n    },\n    {\n      identifier: \"startProcess\",\n      type: \"camelCase\",\n      distractors: [\"processStart\", \"initiateProcess\", \"streamProcess\"],\n      sentence: \"start process\",\n    },\n    {\n      identifier: \"start-process\",\n      type: \"kebabCase\",\n      distractors: [\"process-start\", \"initiates-process\", \"stream-process\"],\n      sentence: \"start process\",\n    },\n    {\n      identifier: \"refreshPage\",\n      type: \"kebabCase\",\n      distractors: [\"reloadPage\", \"resetPage\", \"updatePage\"],\n      sentence: \"refresh page\",\n    },\n    {\n      identifier: \"refresh-page\",\n      type: \"kebabCase\",\n      distractors: [\"reload-page\", \"reset-page\", \"update-page\"],\n      sentence: \"refresh page\",\n    },\n    {\n      identifier: \"noPainNoGain\",\n      type: \"camelCase\",\n      distractors: [\"noPaceNoTaste\", \"noPainNogain\", \"noPastNoGassed\"],\n      sentence: \"no pain no gain\",\n    },\n    {\n      identifier: \"no-pain-no-gain\",\n      type: \"kebabCase\",\n      distractors: [\"no-pace-no-taste\", \"no-pane-no-gain\", \"no-past-no-gassed\"],\n      sentence: \"no pain no gain\",\n    },\n    {\n      identifier: \"asSoonAsPossible\",\n      type: \"camelCase\",\n      distractors: [\"asSoonPossible\", \"soonAsPossible\", \"asSoupAsPossible\"],\n      sentence: \"as soon as possible\",\n    },\n    {\n      identifier: \"as-soon-as-possible\",\n      type: \"kebabCase\",\n      distractors: [\"as-soon-possible\", \"soon-as-possible\", \"as-soup-as-possible\"],\n      sentence: \"as soon as possible\",\n    },\n    {\n      identifier: \"appleCare\",\n      type: \"camelCase\",\n      distractors: [\"appleStare\", \"apleCare\", \"apppleCare\"],\n      sentence: \"apple care\",\n    },\n    {\n      identifier: \"apple-care\",\n      type: \"kebabCase\",\n      distractors: [\"apple-stare\", \"aple-care\", \"appple-care\"],\n      sentence: \"apple care\",\n    },\n    {\n      identifier: \"ciao-a-tutti\",\n      type: \"kebabCase\",\n      distractors: [\"ciao-tutti\", \"ciao-ai-brutti\", \"cioa-a-tutti\"],\n      sentence: \"ciao a tutti\",\n    },\n    {\n      identifier: \"ciaoATutti\",\n      type: \"camelCase\",\n      distractors: [\"ciaoTutti\", \"ciaoAiBrutti\", \"cioaATutti\"],\n      sentence: \"ciao a tutti\",\n    },\n  ];\n\n  useEffect(() => {\n    // Shuffle tasks when the component mounts\n    const shuffled = tasks.sort(() => Math.random() - 0.5);\n    setShuffledTasks(shuffled);\n    setTaskData([]); // Clear previous experiment data\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setTaskData]); // Runs only when component mounts or setTaskData changes\n\n  useEffect(() => {\n    if (countdown > 0) {\n      const timer = setTimeout(() => setCountdown(countdown - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (startTime === null) {\n      setStartTime(Date.now());\n    }\n  }, [countdown, startTime]);\n\n  useEffect(() => {\n    if (shuffledTasks && shuffledTasks.length > 0) {\n      const options = [\n        shuffledTasks[currentTaskIndex].identifier,\n        ...shuffledTasks[currentTaskIndex].distractors,\n      ];\n      setShuffledOptions(options.sort(() => Math.random() - 0.5));\n      setIncorrectOptions([]);\n    }\n  }, [currentTaskIndex, shuffledTasks]);\n\n  const handleOptionClick = (isCorrect, option) => {\n    const endTime = Date.now();\n    const timeTaken = endTime - startTime;\n\n    if (disableButtons) return;\n\n    if (isCorrect) {\n      setFeedbackColor({ [option]: \"green\" });\n      setDisableButtons(true);\n\n      setTaskData((prev) => {\n        const updatedData = prev.filter(\n            (task) => task.identifier !== shuffledTasks[currentTaskIndex].identifier\n        );\n        return [\n          ...updatedData,\n          {\n            ...shuffledTasks[currentTaskIndex],\n            timeTaken,\n            isCorrect: true,\n          },\n        ];\n      });\n\n      setTimeout(() => {\n        if (currentTaskIndex + 1 < shuffledTasks.length) {\n          setCurrentTaskIndex(currentTaskIndex + 1);\n          setStartTime(Date.now());\n          setFeedbackColor({});\n          setDisableButtons(false);\n        } else {\n          generateCsvData();\n          navigate(\"/results\");\n        }\n      }, 1000);\n    } else {\n      if (!disableButtons) {\n        setTaskData((prev) => {\n          const existingTask = prev.find(\n              (task) => task.identifier === shuffledTasks[currentTaskIndex].identifier\n          );\n          if (existingTask && existingTask.isCorrect) {\n            return prev;\n          }\n          const updatedData = prev.filter(\n              (task) => task.identifier !== shuffledTasks[currentTaskIndex].identifier\n          );\n          return [\n            ...updatedData,\n            {\n              ...shuffledTasks[currentTaskIndex],\n              timeTaken,\n              isCorrect: false,\n            },\n          ];\n        });\n      }\n\n      setIncorrectOptions((prev) => [...prev, option]);\n    }\n  };\n\n  const generateCsvData = () => {\n    const csvContent = Papa.unparse(\n        taskData.map((task) => ({\n          name: formData.name,\n          age: formData.age,\n          experience: formData.experience,\n          identifier: task.identifier,\n          type: task.type,\n          timeTaken: task.timeTaken,\n          isCorrect: task.isCorrect,\n        }))\n    );\n\n    setCsvData(csvContent);\n  };\n\n  return (\n      <div>\n        <header>\n          <h1>Experiment</h1>\n        </header>\n        <main>\n          {countdown > 0 ? (\n              <div>\n                <h1>The experiment will start in:</h1>\n                <h1>{countdown}</h1>\n              </div>\n          ) : currentTaskIndex < shuffledTasks.length ? (\n              <div>\n                <p>Identify the corresponding identifier for:</p>\n                <h1>\n                  <strong>{shuffledTasks[currentTaskIndex].sentence}</strong>\n                </h1>\n                <div className=\"card-grid\">\n                  {shuffledOptions.map((option, index) => (\n                      <button\n                          key={index}\n                          className=\"card-button\"\n                          onClick={() =>\n                              handleOptionClick(option === shuffledTasks[currentTaskIndex].identifier, option)\n                          }\n                          style={{\n                            backgroundColor:\n                                feedbackColor[option] || (incorrectOptions.includes(option) ? \"red\" : \"\"),\n                            pointerEvents: disableButtons ? \"none\" : \"auto\",\n                          }}\n                      >\n                        {option}\n                      </button>\n                  ))}\n                </div>\n                <p>Task {currentTaskIndex + 1} of {shuffledTasks.length}</p>\n              </div>\n          ) : (\n              <p>Experiment completed!</p>\n          )}\n        </main>\n      </div>\n  );\n}\n\nexport default Experiment;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,WAAW,MAAM,wBAAwB;AAEhD,SAASC,UAAUA,CAAA,EAAG;EACpB,MAAM;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,WAAW;IAAEC;EAAW,CAAC,GAAGV,UAAU,CAACK,WAAW,CAAC;EAC/E,MAAM,CAACM,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACsB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM0B,QAAQ,GAAGxB,WAAW,CAAC,CAAC;EAE9B,MAAMyB,KAAK,GAAG;EACZ;EACA;IACEC,UAAU,EAAE,WAAW;IACvBC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,YAAY,CAAC;IACtDC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,YAAY;IACxBC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,aAAa,EAAE,YAAY,EAAE,aAAa,CAAC;IACzDC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,gBAAgB;IAC5BC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,cAAc,EAAE,kBAAkB,EAAE,cAAc,CAAC;IACjEC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,iBAAiB;IAC7BC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,eAAe,EAAE,mBAAmB,EAAE,eAAe,CAAC;IACpEC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,kBAAkB;IAC9BC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,aAAa,EAAE,kBAAkB,EAAE,YAAY,CAAC;IAC9DC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,oBAAoB;IAChCC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,cAAc,EAAE,oBAAoB,EAAE,aAAa,CAAC;IAClEC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,aAAa;IACzBC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,cAAc,EAAE,eAAe,EAAE,gBAAgB,CAAC;IAChEC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,cAAc;IAC1BC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,eAAe,EAAE,gBAAgB,EAAE,iBAAiB,CAAC;IACnEC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,cAAc;IAC1BC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,cAAc,EAAE,iBAAiB,EAAE,eAAe,CAAC;IACjEC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,eAAe;IAC3BC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,eAAe,EAAE,mBAAmB,EAAE,gBAAgB,CAAC;IACrEC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,aAAa;IACzBC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,YAAY,CAAC;IACtDC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,cAAc;IAC1BC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,aAAa,EAAE,YAAY,EAAE,aAAa,CAAC;IACzDC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,cAAc;IAC1BC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,eAAe,EAAE,cAAc,EAAE,gBAAgB,CAAC;IAChEC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,iBAAiB;IAC7BC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,kBAAkB,EAAE,iBAAiB,EAAE,mBAAmB,CAAC;IACzEC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,kBAAkB;IAC9BC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,kBAAkB,CAAC;IACrEC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,qBAAqB;IACjCC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,kBAAkB,EAAE,kBAAkB,EAAE,qBAAqB,CAAC;IAC5EC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,WAAW;IACvBC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC;IACrDC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,YAAY;IACxBC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,aAAa,EAAE,WAAW,EAAE,aAAa,CAAC;IACxDC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,cAAc;IAC1BC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,YAAY,EAAE,gBAAgB,EAAE,cAAc,CAAC;IAC7DC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,UAAU,EAAE,YAAY;IACxBC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,CAAC,WAAW,EAAE,cAAc,EAAE,YAAY,CAAC;IACxDC,QAAQ,EAAE;EACZ,CAAC,CACF;EAED9B,SAAS,CAAC,MAAM;IACd;IACA,MAAM+B,QAAQ,GAAGL,KAAK,CAACM,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IACtDV,gBAAgB,CAACO,QAAQ,CAAC;IAC1BxB,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnBP,SAAS,CAAC,MAAM;IACd,IAAIa,SAAS,GAAG,CAAC,EAAE;MACjB,MAAMsB,KAAK,GAAGC,UAAU,CAAC,MAAMtB,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;MACjE,OAAO,MAAMwB,YAAY,CAACF,KAAK,CAAC;IAClC,CAAC,MAAM,IAAIxB,SAAS,KAAK,IAAI,EAAE;MAC7BC,YAAY,CAAC0B,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,CAAC1B,SAAS,EAAEF,SAAS,CAAC,CAAC;EAE1BX,SAAS,CAAC,MAAM;IACd,IAAIuB,aAAa,IAAIA,aAAa,CAACiB,MAAM,GAAG,CAAC,EAAE;MAC7C,MAAMC,OAAO,GAAG,CACdlB,aAAa,CAACd,gBAAgB,CAAC,CAACkB,UAAU,EAC1C,GAAGJ,aAAa,CAACd,gBAAgB,CAAC,CAACoB,WAAW,CAC/C;MACDT,kBAAkB,CAACqB,OAAO,CAACT,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;MAC3DZ,mBAAmB,CAAC,EAAE,CAAC;IACzB;EACF,CAAC,EAAE,CAACb,gBAAgB,EAAEc,aAAa,CAAC,CAAC;EAErC,MAAMmB,iBAAiB,GAAGA,CAACC,SAAS,EAAEC,MAAM,KAAK;IAC/C,MAAMC,OAAO,GAAGP,IAAI,CAACC,GAAG,CAAC,CAAC;IAC1B,MAAMO,SAAS,GAAGD,OAAO,GAAGlC,SAAS;IAErC,IAAIM,cAAc,EAAE;IAEpB,IAAI0B,SAAS,EAAE;MACb3B,gBAAgB,CAAC;QAAE,CAAC4B,MAAM,GAAG;MAAQ,CAAC,CAAC;MACvC1B,iBAAiB,CAAC,IAAI,CAAC;MAEvBX,WAAW,CAAEwC,IAAI,IAAK;QACpB,MAAMC,WAAW,GAAGD,IAAI,CAACE,MAAM,CAC1BC,IAAI,IAAKA,IAAI,CAACvB,UAAU,KAAKJ,aAAa,CAACd,gBAAgB,CAAC,CAACkB,UAClE,CAAC;QACD,OAAO,CACL,GAAGqB,WAAW,EACd;UACE,GAAGzB,aAAa,CAACd,gBAAgB,CAAC;UAClCqC,SAAS;UACTH,SAAS,EAAE;QACb,CAAC,CACF;MACH,CAAC,CAAC;MAEFP,UAAU,CAAC,MAAM;QACf,IAAI3B,gBAAgB,GAAG,CAAC,GAAGc,aAAa,CAACiB,MAAM,EAAE;UAC/C9B,mBAAmB,CAACD,gBAAgB,GAAG,CAAC,CAAC;UACzCG,YAAY,CAAC0B,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;UACxBvB,gBAAgB,CAAC,CAAC,CAAC,CAAC;UACpBE,iBAAiB,CAAC,KAAK,CAAC;QAC1B,CAAC,MAAM;UACLiC,eAAe,CAAC,CAAC;UACjB1B,QAAQ,CAAC,UAAU,CAAC;QACtB;MACF,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACL,IAAI,CAACR,cAAc,EAAE;QACnBV,WAAW,CAAEwC,IAAI,IAAK;UACpB,MAAMK,YAAY,GAAGL,IAAI,CAACM,IAAI,CACzBH,IAAI,IAAKA,IAAI,CAACvB,UAAU,KAAKJ,aAAa,CAACd,gBAAgB,CAAC,CAACkB,UAClE,CAAC;UACD,IAAIyB,YAAY,IAAIA,YAAY,CAACT,SAAS,EAAE;YAC1C,OAAOI,IAAI;UACb;UACA,MAAMC,WAAW,GAAGD,IAAI,CAACE,MAAM,CAC1BC,IAAI,IAAKA,IAAI,CAACvB,UAAU,KAAKJ,aAAa,CAACd,gBAAgB,CAAC,CAACkB,UAClE,CAAC;UACD,OAAO,CACL,GAAGqB,WAAW,EACd;YACE,GAAGzB,aAAa,CAACd,gBAAgB,CAAC;YAClCqC,SAAS;YACTH,SAAS,EAAE;UACb,CAAC,CACF;QACH,CAAC,CAAC;MACJ;MAEArB,mBAAmB,CAAEyB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,MAAM,CAAC,CAAC;IAClD;EACF,CAAC;EAED,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMG,UAAU,GAAGpD,IAAI,CAACqD,OAAO,CAC3BjD,QAAQ,CAACkD,GAAG,CAAEN,IAAI,KAAM;MACtBO,IAAI,EAAEpD,QAAQ,CAACoD,IAAI;MACnBC,GAAG,EAAErD,QAAQ,CAACqD,GAAG;MACjBC,UAAU,EAAEtD,QAAQ,CAACsD,UAAU;MAC/BhC,UAAU,EAAEuB,IAAI,CAACvB,UAAU;MAC3BC,IAAI,EAAEsB,IAAI,CAACtB,IAAI;MACfkB,SAAS,EAAEI,IAAI,CAACJ,SAAS;MACzBH,SAAS,EAAEO,IAAI,CAACP;IAClB,CAAC,CAAC,CACN,CAAC;IAEDnC,UAAU,CAAC8C,UAAU,CAAC;EACxB,CAAC;EAED,oBACIzD,KAAA,CAAA+D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACErE,KAAA,CAAA+D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACErE,KAAA,CAAA+D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,YAAc,CACZ,CAAC,eACTrE,KAAA,CAAA+D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGrD,SAAS,GAAG,CAAC,gBACVhB,KAAA,CAAA+D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACErE,KAAA,CAAA+D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,+BAAiC,CAAC,eACtCrE,KAAA,CAAA+D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKrD,SAAc,CAChB,CAAC,GACNJ,gBAAgB,GAAGc,aAAa,CAACiB,MAAM,gBACvC3C,KAAA,CAAA+D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACErE,KAAA,CAAA+D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,4CAA6C,CAAC,eACjDrE,KAAA,CAAA+D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACErE,KAAA,CAAA+D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAS3C,aAAa,CAACd,gBAAgB,CAAC,CAACqB,QAAiB,CACxD,CAAC,eACLjC,KAAA,CAAA+D,aAAA;IAAKO,SAAS,EAAC,WAAW;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvB/C,eAAe,CAACqC,GAAG,CAAC,CAACZ,MAAM,EAAEwB,KAAK,kBAC/BvE,KAAA,CAAA+D,aAAA;IACIS,GAAG,EAAED,KAAM;IACXD,SAAS,EAAC,aAAa;IACvBG,OAAO,EAAEA,CAAA,KACL5B,iBAAiB,CAACE,MAAM,KAAKrB,aAAa,CAACd,gBAAgB,CAAC,CAACkB,UAAU,EAAEiB,MAAM,CAClF;IACD2B,KAAK,EAAE;MACLC,eAAe,EACXzD,aAAa,CAAC6B,MAAM,CAAC,KAAKvB,gBAAgB,CAACoD,QAAQ,CAAC7B,MAAM,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;MAC7E8B,aAAa,EAAEzD,cAAc,GAAG,MAAM,GAAG;IAC3C,CAAE;IAAA4C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEHtB,MACK,CACX,CACE,CAAC,eACN/C,KAAA,CAAA+D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,OAAK,EAACzD,gBAAgB,GAAG,CAAC,EAAC,MAAI,EAACc,aAAa,CAACiB,MAAU,CACxD,CAAC,gBAEN3C,KAAA,CAAA+D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,uBAAwB,CAE3B,CACH,CAAC;AAEZ;AAEA,eAAe9D,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}