{"map":"{\"version\":3,\"sources\":[\"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/camel-vs-kebab/src/components/WelcomePage.js\",\"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/camel-vs-kebab/src/context/DataContext.js\",\"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/camel-vs-kebab/src/components/DemographicsForm.js\",\"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/camel-vs-kebab/src/components/Experiment.js\",\"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/camel-vs-kebab/src/App.js\",\"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/camel-vs-kebab/src/index.js\"],\"names\":[\"WelcomePage\",\"React\",\"createElement\",\"onClick\",\"window\",\"location\",\"href\",\"DataContext\",\"createContext\",\"DataProvider\",\"_ref\",\"children\",\"formData\",\"setFormData\",\"useState\",\"name\",\"age\",\"experience\",\"taskData\",\"setTaskData\",\"Provider\",\"value\",\"DemographicsForm\",\"useContext\",\"handleChange\",\"e\",\"target\",\"[object Object]\",\"onSubmit\",\"preventDefault\",\"csvData\",\"Papa\",\"unparse\",\"map\",\"task\",\"identifier\",\"type\",\"timeTaken\",\"isCorrect\",\"blob\",\"Blob\",\"url\",\"URL\",\"createObjectURL\",\"link\",\"document\",\"setAttribute\",\"click\",\"className\",\"onChange\",\"required\",\"disabled\",\"Experiment\",\"currentTaskIndex\",\"setCurrentTaskIndex\",\"startTime\",\"setStartTime\",\"tasks\",\"handleCompleteTask\",\"Date\",\"now\",\"prev\",\"length\",\"console\",\"log\",\"App\",\"Router\",\"Routes\",\"Route\",\"path\",\"element\",\"Results\",\"ReactDOM\",\"render\",\"StrictMode\",\"getElementById\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\n\\nfunction WelcomePage() {\\n  return (\\n    <div>\\n      <header>\\n        <h1>Welcome to the Experiment</h1>\\n      </header>\\n\\n      <main>\\n        <p>\\n          Thank you for participating! In this experiment, you will identify\\n          identifiers written in <b>camelCase</b> or <b>kebab-case</b>. Follow\\n          the instructions carefully and try your best!\\n        </p>\\n        <button onClick={() => (window.location.href = \\\"/form\\\")}>\\n          Start Experiment\\n        </button>\\n      </main>\\n\\n      <footer>\\n        <p>Experimentation & Evaluation - 2024</p>\\n        <p>&copy; Noah Salvi, Alessandro Della Flora, Stipe Peran</p>\\n      </footer>\\n    </div>\\n  );\\n}\\n\\nexport default WelcomePage;\\n\",\"import React, { createContext, useState } from 'react';\\n\\nconst DataContext = createContext();\\n\\nexport const DataProvider = ({ children }) => {\\n  const [formData, setFormData] = useState({\\n    name: '',\\n    age: '',\\n    experience: '',\\n  });\\n\\n  const [taskData, setTaskData] = useState([]);\\n\\n  return (\\n    <DataContext.Provider value={{ formData, setFormData, taskData, setTaskData }}>\\n      {children}\\n    </DataContext.Provider>\\n  );\\n};\\n\\nexport default DataContext;\\n\",\"import React, { useContext } from 'react';\\nimport Papa from 'papaparse';\\nimport DataContext from '../context/DataContext';\\n\\nfunction DemographicsForm() {\\n  const { formData, setFormData, taskData } = useContext(DataContext);\\n\\n  const handleChange = (e) => {\\n    const { name, value } = e.target;\\n    setFormData({\\n      ...formData,\\n      [name]: value,\\n    });\\n  };\\n\\n  const handleSubmit = (e) => {\\n    e.preventDefault();\\n    const csvData = Papa.unparse(taskData.map((task) => ({\\n      name: formData.name,\\n      age: formData.age,\\n      experience: formData.experience,\\n      identifier: task.identifier,\\n      type: task.type,\\n      timeTaken: task.timeTaken,\\n      isCorrect: task.isCorrect,\\n    })));\\n\\n    const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\\n    const url = URL.createObjectURL(blob);\\n    const link = document.createElement('a');\\n    link.setAttribute('href', url);\\n    link.setAttribute('download', 'experiment_results.csv');\\n    link.click();\\n  };\\n\\n  return (\\n    <div>\\n      <header>\\n        <h1>Demographics Form</h1>\\n      </header>\\n      <main>\\n        <form onSubmit={handleSubmit} className=\\\"form-container\\\">\\n          {/* Name Field */}\\n          <label className=\\\"form-label\\\">\\n            Name:\\n            <input\\n              type=\\\"text\\\"\\n              name=\\\"name\\\"\\n              value={formData.name}\\n              onChange={handleChange}\\n              className=\\\"form-input\\\"\\n              required\\n            />\\n          </label>\\n\\n          {/* Age Field */}\\n          <label className=\\\"form-label\\\">\\n            Age:\\n            <input\\n              type=\\\"number\\\"\\n              name=\\\"age\\\"\\n              value={formData.age}\\n              onChange={handleChange}\\n              className=\\\"form-input\\\"\\n              required\\n            />\\n          </label>\\n\\n          {/* Experience Level */}\\n          <label className=\\\"form-label\\\">\\n            Experience Level:\\n            <select\\n              name=\\\"experience\\\"\\n              value={formData.experience}\\n              onChange={handleChange}\\n              className=\\\"form-input\\\"\\n              required\\n            >\\n              <option value=\\\"\\\" disabled>\\n                Select your experience\\n              </option>\\n              <option value=\\\"beginner\\\">Beginner</option>\\n              <option value=\\\"intermediate\\\">Intermediate</option>\\n              <option value=\\\"advanced\\\">Advanced</option>\\n            </select>\\n          </label>\\n\\n          {/* Submit Button */}\\n          <button type=\\\"submit\\\">\\n            Submit\\n          </button>\\n        </form>\\n      </main>\\n      <footer>\\n        <p>Experimentation & Evaluation - 2024</p>\\n      </footer>\\n    </div>\\n  );\\n}\\n\\nexport default DemographicsForm;\\n\",\"import React, { useContext, useState } from \\\"react\\\";\\nimport DataContext from \\\"../context/DataContext\\\";\\n\\nfunction Experiment() {\\n  const { taskData, setTaskData } = useContext(DataContext);\\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\\n  const [startTime, setStartTime] = useState(null);\\n\\n  const tasks = [\\n    { identifier: \\\"camelCaseExample\\\", type: \\\"camelCase\\\" },\\n    { identifier: \\\"kebab-case-example\\\", type: \\\"kebabCase\\\" },\\n    // Add more tasks here\\n  ];\\n\\n  const handleStartTask = () => {\\n    setStartTime(Date.now());\\n  };\\n\\n  const handleCompleteTask = (isCorrect) => {\\n    const endTime = Date.now();\\n    const timeTaken = endTime - startTime;\\n\\n    setTaskData((prev) => [\\n      ...prev,\\n      {\\n        ...tasks[currentTaskIndex],\\n        timeTaken,\\n        isCorrect,\\n      },\\n    ]);\\n\\n    if (currentTaskIndex + 1 < tasks.length) {\\n      setCurrentTaskIndex(currentTaskIndex + 1);\\n      handleStartTask();\\n    } else {\\n      console.log(\\\"All tasks completed\\\", taskData);\\n    }\\n  };\\n\\n  return (\\n    <div>\\n      <header>\\n        <h1>Experiment</h1>\\n      </header>\\n      <main>\\n        {currentTaskIndex < tasks.length ? (\\n          <div>\\n            <p>Identify the task: {tasks[currentTaskIndex].identifier}</p>\\n            <button onClick={() => handleCompleteTask(true)}>Correct</button>\\n            <button onClick={() => handleCompleteTask(false)}>Incorrect</button>\\n          </div>\\n        ) : (\\n          <p>Experiment completed!</p>\\n        )}\\n      </main>\\n    </div>\\n  );\\n}\\n\\nexport default Experiment;\\n\",\"import { BrowserRouter as Router, Routes, Route } from \\\"react-router-dom\\\";\\nimport React from 'react';\\nimport WelcomePage from \\\"./components/WelcomePage\\\";\\nimport DemographicsForm from \\\"./components/DemographicsForm\\\";\\nimport Experiment from \\\"./components/Experiment\\\";\\nimport Results from \\\"./components/Results\\\";\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <Routes>\\n        <Route path=\\\"/\\\" element={<WelcomePage />} />\\n        <Route path=\\\"/form\\\" element={<DemographicsForm />} />\\n        <Route path=\\\"/experiment\\\" element={<Experiment />} />\\n        <Route path=\\\"/results\\\" element={<Results />} />\\n      </Routes>\\n    </Router>\\n  );\\n}\\n\\nexport default App;\\n\",\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom/client\\\";\\nimport \\\"./App.css\\\";\\nimport App from \\\"./App\\\";\\nimport { DataProvider } from './context/DataContext';\\n\\nReactDOM.render(\\n  <React.StrictMode>\\n    <DataProvider>\\n      <App />\\n    </DataProvider>\\n  </React.StrictMode>,\\n  document.getElementById('root')\\n);\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{17:function(e,t,a){},18:function(e,t,a){\"use strict\";a.r(t);var n=a(0),l=a.n(n),r=a(5),c=a.n(r),m=(a(17),a(8)),i=a(1);var o=function(){return l.a.createElement(\"div\",null,l.a.createElement(\"header\",null,l.a.createElement(\"h1\",null,\"Welcome to the Experiment\")),l.a.createElement(\"main\",null,l.a.createElement(\"p\",null,\"Thank you for participating! In this experiment, you will identify identifiers written in \",l.a.createElement(\"b\",null,\"camelCase\"),\" or \",l.a.createElement(\"b\",null,\"kebab-case\"),\". Follow the instructions carefully and try your best!\"),l.a.createElement(\"button\",{onClick:()=>window.location.href=\"/form\"},\"Start Experiment\")),l.a.createElement(\"footer\",null,l.a.createElement(\"p\",null,\"Experimentation & Evaluation - 2024\"),l.a.createElement(\"p\",null,\"\\xa9 Noah Salvi, Alessandro Della Flora, Stipe Peran\")))},u=a(6),s=a.n(u);const E=Object(n.createContext)(),p=e=>{let{children:t}=e;const[a,r]=Object(n.useState)({name:\"\",age:\"\",experience:\"\"}),[c,m]=Object(n.useState)([]);return l.a.createElement(E.Provider,{value:{formData:a,setFormData:r,taskData:c,setTaskData:m}},t)};var d=E;var b=function(){const{formData:e,setFormData:t,taskData:a}=Object(n.useContext)(d),r=a=>{const{name:n,value:l}=a.target;t({...e,[n]:l})};return l.a.createElement(\"div\",null,l.a.createElement(\"header\",null,l.a.createElement(\"h1\",null,\"Demographics Form\")),l.a.createElement(\"main\",null,l.a.createElement(\"form\",{onSubmit:t=>{t.preventDefault();const n=s.a.unparse(a.map(t=>({name:e.name,age:e.age,experience:e.experience,identifier:t.identifier,type:t.type,timeTaken:t.timeTaken,isCorrect:t.isCorrect}))),l=new Blob([n],{type:\"text/csv;charset=utf-8;\"}),r=URL.createObjectURL(l),c=document.createElement(\"a\");c.setAttribute(\"href\",r),c.setAttribute(\"download\",\"experiment_results.csv\"),c.click()},className:\"form-container\"},l.a.createElement(\"label\",{className:\"form-label\"},\"Name:\",l.a.createElement(\"input\",{type:\"text\",name:\"name\",value:e.name,onChange:r,className:\"form-input\",required:!0})),l.a.createElement(\"label\",{className:\"form-label\"},\"Age:\",l.a.createElement(\"input\",{type:\"number\",name:\"age\",value:e.age,onChange:r,className:\"form-input\",required:!0})),l.a.createElement(\"label\",{className:\"form-label\"},\"Experience Level:\",l.a.createElement(\"select\",{name:\"experience\",value:e.experience,onChange:r,className:\"form-input\",required:!0},l.a.createElement(\"option\",{value:\"\",disabled:!0},\"Select your experience\"),l.a.createElement(\"option\",{value:\"beginner\"},\"Beginner\"),l.a.createElement(\"option\",{value:\"intermediate\"},\"Intermediate\"),l.a.createElement(\"option\",{value:\"advanced\"},\"Advanced\"))),l.a.createElement(\"button\",{type:\"submit\"},\"Submit\"))),l.a.createElement(\"footer\",null,l.a.createElement(\"p\",null,\"Experimentation & Evaluation - 2024\")))};var f=function(){const{taskData:e,setTaskData:t}=Object(n.useContext)(d),[a,r]=Object(n.useState)(0),[c,m]=Object(n.useState)(null),i=[{identifier:\"camelCaseExample\",type:\"camelCase\"},{identifier:\"kebab-case-example\",type:\"kebabCase\"}],o=n=>{const l=Date.now()-c;t(e=>[...e,{...i[a],timeTaken:l,isCorrect:n}]),a+1<i.length?(r(a+1),m(Date.now())):console.log(\"All tasks completed\",e)};return l.a.createElement(\"div\",null,l.a.createElement(\"header\",null,l.a.createElement(\"h1\",null,\"Experiment\")),l.a.createElement(\"main\",null,a<i.length?l.a.createElement(\"div\",null,l.a.createElement(\"p\",null,\"Identify the task: \",i[a].identifier),l.a.createElement(\"button\",{onClick:()=>o(!0)},\"Correct\"),l.a.createElement(\"button\",{onClick:()=>o(!1)},\"Incorrect\")):l.a.createElement(\"p\",null,\"Experiment completed!\")))},v=a(7),h=a.n(v);var x=function(){return l.a.createElement(m.a,null,l.a.createElement(i.c,null,l.a.createElement(i.a,{path:\"/\",element:l.a.createElement(o,null)}),l.a.createElement(i.a,{path:\"/form\",element:l.a.createElement(b,null)}),l.a.createElement(i.a,{path:\"/experiment\",element:l.a.createElement(f,null)}),l.a.createElement(i.a,{path:\"/results\",element:l.a.createElement(h.a,null)})))};c.a.render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(p,null,l.a.createElement(x,null))),document.getElementById(\"root\"))},7:function(e,t){},9:function(e,t,a){e.exports=a(18)}},[[9,1,2]]]);","extractedComments":[]}