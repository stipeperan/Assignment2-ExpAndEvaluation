{"map":"{\"version\":3,\"sources\":[\"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/Assignment2-ExpAndEvaluation/camel_vs_kebab/src/components/WelcomePage.js\",\"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/Assignment2-ExpAndEvaluation/camel_vs_kebab/src/context/DataContext.js\",\"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/Assignment2-ExpAndEvaluation/camel_vs_kebab/src/components/DemographicsForm.js\",\"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/Assignment2-ExpAndEvaluation/camel_vs_kebab/src/components/Experiment.js\",\"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/Assignment2-ExpAndEvaluation/camel_vs_kebab/src/components/Results.js\",\"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/Assignment2-ExpAndEvaluation/camel_vs_kebab/src/App.js\",\"/home/jesus/Desktop/USI/5_USI/Experimentation&Evaluation/Exp2/Assignment2-ExpAndEvaluation/camel_vs_kebab/src/index.js\"],\"names\":[\"WelcomePage\",\"React\",\"createElement\",\"onClick\",\"window\",\"location\",\"href\",\"DataContext\",\"createContext\",\"DataProvider\",\"_ref\",\"children\",\"formData\",\"setFormData\",\"useState\",\"name\",\"age\",\"experience\",\"taskData\",\"setTaskData\",\"csvData\",\"setCsvData\",\"Provider\",\"value\",\"DemographicsForm\",\"useContext\",\"navigate\",\"useNavigate\",\"handleChange\",\"e\",\"target\",\"[object Object]\",\"onSubmit\",\"preventDefault\",\"className\",\"type\",\"onChange\",\"required\",\"disabled\",\"Experiment\",\"currentTaskIndex\",\"setCurrentTaskIndex\",\"startTime\",\"setStartTime\",\"countdown\",\"setCountdown\",\"feedbackColor\",\"setFeedbackColor\",\"disableButtons\",\"setDisableButtons\",\"shuffledOptions\",\"setShuffledOptions\",\"incorrectOptions\",\"setIncorrectOptions\",\"tasks\",\"identifier\",\"distractors\",\"sentence\",\"useEffect\",\"timer\",\"setTimeout\",\"clearTimeout\",\"Date\",\"now\",\"length\",\"options\",\"sort\",\"Math\",\"random\",\"generateCsvData\",\"csvContent\",\"Papa\",\"unparse\",\"map\",\"task\",\"timeTaken\",\"isCorrect\",\"option\",\"index\",\"key\",\"handleOptionClick\",\"prev\",\"filter\",\"existingTask\",\"find\",\"style\",\"backgroundColor\",\"includes\",\"pointerEvents\",\"ResultPage\",\"blob\",\"Blob\",\"url\",\"URL\",\"createObjectURL\",\"filename\",\"link\",\"document\",\"setAttribute\",\"body\",\"appendChild\",\"click\",\"removeChild\",\"downloadCSV\",\"App\",\"Router\",\"Routes\",\"Route\",\"path\",\"element\",\"Results\",\"ReactDOM\",\"createRoot\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\n\\nfunction WelcomePage() {\\n  return (\\n    <div>\\n      <header>\\n        <h1>Welcome to the Experiment!</h1>\\n      </header>\\n\\n      <main>\\n        <p>\\n          The goal of this experiment is to study how different \\n          identifier styles - <b>camelCase</b> and <b>kebab-case</b> - \\n          affect reading speed and accuracy.\\n        </p>\\n        <p>\\n          Here is what you are asked to do:\\n        </p>\\n        <p>\\n          <ul>\\n            <li>Start by filling out a short demographics form.</li>\\n            <li>Find the correct identifier matching a given phrase \\n              as quickly as possible.</li>\\n            <li>Complete all the tasks!</li>\\n          </ul>\\n        </p>\\n        <p>\\n          Please ensure you are in a distraction-free environment. \\n          Whenever you're ready, click the button below to begin.\\n        </p>\\n        <button onClick={() => (window.location.href = \\\"/form\\\")}>\\n          Start Experiment\\n        </button>\\n      </main>\\n\\n      <footer>\\n        <p>Experimentation & Evaluation - 2024</p>\\n        <p>&copy; Noah Salvi, Alessandro Della Flora, Stipe Peran</p>\\n      </footer>\\n    </div>\\n  );\\n}\\n\\nexport default WelcomePage;\\n\",\"import React, { createContext, useState } from \\\"react\\\";\\n\\nconst DataContext = createContext();\\n\\nexport const DataProvider = ({ children }) => {\\n  const [formData, setFormData] = useState({\\n    name: \\\"\\\",\\n    age: \\\"\\\",\\n    experience: \\\"\\\",\\n  });\\n  const [taskData, setTaskData] = useState([]);\\n  const [csvData, setCsvData] = useState(\\\"\\\");\\n\\n  return (\\n    <DataContext.Provider\\n      value={{\\n        formData,\\n        setFormData,\\n        taskData,\\n        setTaskData,\\n        csvData,\\n        setCsvData,\\n      }}\\n    >\\n      {children}\\n    </DataContext.Provider>\\n  );\\n};\\n\\nexport default DataContext;\\n\",\"import React, { useContext } from 'react';\\nimport DataContext from '../context/DataContext';\\nimport { useNavigate } from 'react-router-dom';\\n\\nfunction DemographicsForm() {\\n  const { formData, setFormData } = useContext(DataContext);\\n  const navigate = useNavigate();\\n\\n  const handleChange = (e) => {\\n    const { name, value } = e.target;\\n    setFormData({\\n      ...formData,\\n      [name]: value,\\n    });\\n  };\\n\\n  const handleSubmit = (e) => {\\n    e.preventDefault();\\n    // Navigate to the experiment page\\n    navigate('/experiment');\\n  };\\n\\n  return (\\n    <div>\\n      <header>\\n        <h1>Demographics Form</h1>\\n      </header>\\n      <main>\\n        <form onSubmit={handleSubmit} className=\\\"form-container\\\">\\n          <label className=\\\"form-label\\\">\\n            Name:\\n            <input\\n              type=\\\"text\\\"\\n              name=\\\"name\\\"\\n              value={formData.name}\\n              onChange={handleChange}\\n              className=\\\"form-input\\\"\\n              required\\n            />\\n          </label>\\n          <label className=\\\"form-label\\\">\\n            Age:\\n            <input\\n              type=\\\"number\\\"\\n              name=\\\"age\\\"\\n              value={formData.age}\\n              onChange={handleChange}\\n              className=\\\"form-input\\\"\\n              required\\n            />\\n          </label>\\n          <label className=\\\"form-label\\\">\\n            Programming Experience:\\n            <select\\n              name=\\\"experience\\\"\\n              value={formData.experience}\\n              onChange={handleChange}\\n              className=\\\"form-input\\\"\\n              required\\n            >\\n              <option value=\\\"\\\" disabled>\\n                Select your experience\\n              </option>\\n              <option value=\\\"beginner\\\">Beginner</option>\\n              <option value=\\\"intermediate\\\">Intermediate</option>\\n              <option value=\\\"advanced\\\">Advanced</option>\\n            </select>\\n          </label>\\n          <button type=\\\"submit\\\">Submit</button>\\n        </form>\\n      </main>\\n      <footer>\\n        <p>Experimentation & Evaluation - 2024</p>\\n      </footer>\\n    </div>\\n  );\\n}\\n\\nexport default DemographicsForm;\\n\",\"import React, { useContext, useState, useEffect } from \\\"react\\\";\\nimport { useNavigate } from \\\"react-router-dom\\\";\\nimport Papa from \\\"papaparse\\\";\\nimport DataContext from \\\"../context/DataContext\\\";\\n\\nfunction Experiment() {\\n  const { formData, taskData, setTaskData, setCsvData } = useContext(DataContext);\\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\\n  const [startTime, setStartTime] = useState(null);\\n  const [countdown, setCountdown] = useState(3);\\n  const [feedbackColor, setFeedbackColor] = useState({});\\n  const [disableButtons, setDisableButtons] = useState(false);\\n  const [shuffledOptions, setShuffledOptions] = useState([]);\\n  const [incorrectOptions, setIncorrectOptions] = useState([]);\\n  const navigate = useNavigate();\\n\\n  const tasks = [\\n    {\\n      identifier: \\\"moveSouth\\\",\\n      type: \\\"camelCase\\\",\\n      distractors: [\\\"moveSource\\\", \\\"moreSouth\\\", \\\"moverSound\\\"],\\n      sentence: \\\"move south\\\",\\n    },\\n    {\\n      identifier: \\\"calculateTotal\\\",\\n      type: \\\"camelCase\\\",\\n      distractors: [\\\"calculateSum\\\", \\\"totalCalculation\\\", \\\"sumCalculate\\\"],\\n      sentence: \\\"calculate total\\\",\\n    },\\n    {\\n      identifier: \\\"user-login-details\\\",\\n      type: \\\"kebabCase\\\",\\n      distractors: [\\\"user-details\\\", \\\"login-user-details\\\", \\\"user-logins\\\"],\\n      sentence: \\\"user login details\\\",\\n    },\\n    {\\n      identifier: \\\"send-message\\\",\\n      type: \\\"kebabCase\\\",\\n      distractors: [\\\"seed-mastodon\\\", \\\"sand-messenger\\\", \\\"deliverMessage\\\"],\\n      sentence: \\\"send message\\\",\\n    },\\n    {\\n      identifier: \\\"startProcess\\\",\\n      type: \\\"camelCase\\\",\\n      distractors: [\\\"processStart\\\", \\\"initiateProcess\\\", \\\"streamProcess\\\"],\\n      sentence: \\\"start process\\\",\\n    },\\n    {\\n      identifier: \\\"refresh-page\\\",\\n      type: \\\"kebabCase\\\",\\n      distractors: [\\\"reload-page\\\", \\\"reset-page\\\", \\\"update-page\\\"],\\n      sentence: \\\"refresh page\\\",\\n    },\\n    {\\n      identifier: \\\"noPainNoGain\\\",\\n      type: \\\"camelCase\\\",\\n      distractors: [\\\"noPaceNoTaste\\\", \\\"noPainNogain\\\", \\\"noPastNoGassed\\\"],\\n      sentence: \\\"no pain no gain\\\",\\n    },\\n    {\\n      identifier: \\\"delete-item\\\",\\n      type: \\\"kebabCase\\\",\\n      distractors: [\\\"remove-item\\\", \\\"erase-item\\\", \\\"discard-item\\\"],\\n      sentence: \\\"delete item\\\",\\n    },\\n    {\\n      identifier: \\\"add-to-cart\\\",\\n      type: \\\"kebabCase\\\",\\n      distractors: [\\\"add-cart\\\", \\\"place-cart\\\", \\\"cart-add\\\"],\\n      sentence: \\\"add to cart\\\",\\n    },\\n    {\\n      identifier: \\\"openFile\\\",\\n      type: \\\"camelCase\\\",\\n      distractors: [\\\"openFolder\\\", \\\"openFiles\\\", \\\"startFile\\\"],\\n      sentence: \\\"open file\\\",\\n    },\\n    {\\n      identifier: \\\"goodGame\\\",\\n      type: \\\"camelCase\\\",\\n      distractors: [\\\"goodgame\\\", \\\"badGame\\\", \\\"goodDay\\\"],\\n      sentence: \\\"good game\\\",\\n    },\\n    {\\n      identifier: \\\"as-soon-as-possible\\\",\\n      type: \\\"kebabCase\\\",\\n      distractors: [\\\"as-soon-possible\\\", \\\"soon-as-possible\\\", \\\"as-soup-as-possible\\\"],\\n      sentence: \\\"as soon as possible\\\",\\n    },\\n    {\\n      identifier: \\\"noWay\\\",\\n      type: \\\"camelCase\\\",\\n      distractors: [\\\"noShame\\\", \\\"noWave\\\", \\\"noPhase\\\"],\\n      sentence: \\\"no way\\\",\\n    },\\n    {\\n      identifier: \\\"yes-man\\\",\\n      type: \\\"kebabCase\\\",\\n      distractors: [\\\"no-man\\\", \\\"yes-men\\\", \\\"yes-can\\\"],\\n      sentence: \\\"yes man\\\",\\n    },\\n    {\\n      identifier: \\\"frontEnd\\\",\\n      type: \\\"camelCase\\\",\\n      distractors: [\\\"backEnd\\\", \\\"frontMen\\\", \\\"frontMad\\\"],\\n      sentence: \\\"front end\\\",\\n    },\\n    {\\n      identifier: \\\"appleCare\\\",\\n      type: \\\"camelCase\\\",\\n      distractors: [\\\"appleStare\\\", \\\"apleCare\\\", \\\"apppleCare\\\"],\\n      sentence: \\\"apple care\\\",\\n    },\\n    {\\n      identifier: \\\"hugoBoss\\\",\\n      type: \\\"camelCase\\\",\\n      distractors: [\\\"hugoBros\\\", \\\"hugeBoss\\\", \\\"bossHugo\\\"],\\n      sentence: \\\"hugo boss\\\",\\n    },\\n    {\\n      identifier: \\\"pop-punk\\\",\\n      type: \\\"kebabCase\\\",\\n      distractors: [\\\"pro-funk\\\", \\\"per-punk\\\", \\\"pop-drunk\\\"],\\n      sentence: \\\"pop punk\\\",\\n    },\\n    {\\n      identifier: \\\"ciao-a-tutti\\\",\\n      type: \\\"kebabCase\\\",\\n      distractors: [\\\"ciao-tutti\\\", \\\"ciao-ai-brutti\\\", \\\"cioa-a-tutti\\\"],\\n      sentence: \\\"ciao a tutti\\\",\\n    },\\n    {\\n      identifier: \\\"end-of-experiment\\\",\\n      type: \\\"kebabCase\\\",\\n      distractors: [\\\"sand-of-experiment\\\", \\\"end-or-experiment\\\", \\\"end-of-ecsperiment\\\"],\\n      sentence: \\\"end of experiment\\\",\\n    },\\n  ];\\n\\n  useEffect(() => {\\n    setTaskData([]); // Clear previous experiment data\\n  }, [setTaskData]);\\n\\n  useEffect(() => {\\n    if (countdown > 0) {\\n      const timer = setTimeout(() => setCountdown(countdown - 1), 1000);\\n      return () => clearTimeout(timer);\\n    } else if (startTime === null) {\\n      setStartTime(Date.now());\\n    }\\n  }, [countdown, startTime]);\\n\\n  useEffect(() => {\\n    if (tasks && tasks.length > 0) {\\n      const options = [tasks[currentTaskIndex].identifier, ...tasks[currentTaskIndex].distractors];\\n      setShuffledOptions(options.sort(() => Math.random() - 0.5));\\n      setIncorrectOptions([]);\\n    }\\n  // eslint-disable-next-line\\n  }, [currentTaskIndex]);\\n\\n\\n  const handleOptionClick = (isCorrect, option) => {\\n    const endTime = Date.now();\\n    const timeTaken = endTime - startTime;\\n  \\n    if (disableButtons) return;\\n  \\n    if (isCorrect) {\\n      setFeedbackColor({ [option]: \\\"green\\\" });\\n      setDisableButtons(true);\\n  \\n      setTaskData((prev) => {\\n        const updatedData = prev.filter((task) => task.identifier !== tasks[currentTaskIndex].identifier);\\n        return [\\n          ...updatedData,\\n          {\\n            ...tasks[currentTaskIndex],\\n            timeTaken,\\n            isCorrect: true,\\n          },\\n        ];\\n      });\\n  \\n      setTimeout(() => {\\n        if (currentTaskIndex + 1 < tasks.length) {\\n          setCurrentTaskIndex(currentTaskIndex + 1);\\n          setStartTime(Date.now());\\n          setFeedbackColor({});\\n          setDisableButtons(false);\\n        } else {\\n          generateCsvData();\\n          navigate(\\\"/results\\\");\\n        }\\n      }, 1000);\\n    } else {\\n      if (!disableButtons) {\\n        setTaskData((prev) => {\\n          const existingTask = prev.find((task) => task.identifier === tasks[currentTaskIndex].identifier);\\n          if (existingTask && existingTask.isCorrect) {\\n            return prev;\\n          }\\n          const updatedData = prev.filter((task) => task.identifier !== tasks[currentTaskIndex].identifier);\\n          return [\\n            ...updatedData,\\n            {\\n              ...tasks[currentTaskIndex],\\n              timeTaken,\\n              isCorrect: false,\\n            },\\n          ];\\n        });\\n      }\\n  \\n      setIncorrectOptions((prev) => [...prev, option]);\\n    }\\n  };\\n  \\n  \\n\\n  const generateCsvData = () => {\\n    const csvContent = Papa.unparse(\\n      taskData.map((task) => ({\\n        name: formData.name,\\n        age: formData.age,\\n        experience: formData.experience,\\n        identifier: task.identifier,\\n        type: task.type,\\n        timeTaken: task.timeTaken,\\n        isCorrect: task.isCorrect,\\n      }))\\n    );\\n\\n    setCsvData(csvContent);\\n  };\\n\\n  return (\\n    <div>\\n      <header>\\n        <h1>Experiment</h1>\\n      </header>\\n      <main>\\n        {countdown > 0 ? (\\n          <div>\\n            <h1>The experiment will start in:</h1>\\n            <h1>{countdown}</h1>\\n          </div>\\n        ) : currentTaskIndex < tasks.length ? (\\n          <div>\\n            <p>\\n              Identify the corresponding identifier for:\\n            </p>\\n            <h1>\\n              <strong>{tasks[currentTaskIndex].sentence}</strong>\\n            </h1>\\n            <div className=\\\"card-grid\\\">\\n              {shuffledOptions.map((option, index) => (\\n                <button\\n                  key={index}\\n                  className=\\\"card-button\\\"\\n                  onClick={() =>\\n                    handleOptionClick(option === tasks[currentTaskIndex].identifier, option)\\n                  }\\n                  style={{\\n                    backgroundColor:\\n                      feedbackColor[option] || (incorrectOptions.includes(option) ? \\\"red\\\" : \\\"\\\"),\\n                    pointerEvents: disableButtons ? \\\"none\\\" : \\\"auto\\\",\\n                  }}                  \\n                >\\n                  {option}\\n                </button>\\n              ))}\\n            </div>\\n            <p>Task {currentTaskIndex + 1} of {tasks.length}</p>\\n          </div>\\n        ) : (\\n          <p>Experiment completed!</p>\\n        )}\\n      </main>\\n    </div>\\n  );\\n}\\n\\nexport default Experiment;\\n\",\"import React, { useContext, useEffect } from 'react';\\nimport DataContext from '../context/DataContext';\\nimport Papa from 'papaparse';\\n\\nfunction downloadCSV(taskData, formData) {\\n    const csvData = Papa.unparse(\\n        taskData.map((task) => ({\\n            age: formData.age,\\n            experience: formData.experience,\\n            identifier: task.identifier,\\n            type: task.type,\\n            timeTaken: task.timeTaken,\\n        }))\\n    );\\n\\n    const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\\n    const url = URL.createObjectURL(blob);\\n\\n    // Append the participant's name to the filename\\n    const participantName = formData.name || 'participant'; // Default to 'participant' if name is not provided\\n    const filename = `experiment_results_${participantName}.csv`;\\n\\n    const link = document.createElement('a');\\n    link.setAttribute('href', url);\\n    link.setAttribute('download', filename);\\n    document.body.appendChild(link); // Required for Firefox\\n    link.click();\\n    document.body.removeChild(link); // Clean up\\n}\\n\\nfunction ResultPage() {\\n    const { taskData, formData } = useContext(DataContext); // Access context values\\n\\n    // Automatically download the CSV file when the component mounts\\n    useEffect(() => {\\n        if (taskData && formData) {\\n            downloadCSV(taskData, formData);\\n        }\\n    }, [taskData, formData]);\\n\\n    return (\\n        <div>\\n            <header>\\n                <h1>Experiment Results</h1>\\n            </header>\\n            <main>\\n                <h3>Thank you for participating in the experiment!</h3>\\n                <h3>Summary</h3>\\n                <ul>\\n                    {taskData.map((task, index) => (\\n                        <li key={index}>\\n                            <strong>{task.identifier}</strong> ({task.type}): {task.timeTaken}ms\\n                        </li>\\n                    ))}\\n                </ul>\\n            </main>\\n            <footer>\\n                <p>Experimentation & Evaluation - 2024</p>\\n            </footer>\\n        </div>\\n    );\\n}\\n\\nexport default ResultPage;\\n\",\"import { BrowserRouter as Router, Routes, Route } from \\\"react-router-dom\\\";\\nimport React from 'react';\\nimport WelcomePage from \\\"./components/WelcomePage\\\";\\nimport DemographicsForm from \\\"./components/DemographicsForm\\\";\\nimport Experiment from \\\"./components/Experiment\\\";\\nimport Results from \\\"./components/Results\\\";\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <Routes>\\n        <Route path=\\\"/\\\" element={<WelcomePage />} />\\n        <Route path=\\\"/form\\\" element={<DemographicsForm />} />\\n        <Route path=\\\"/experiment\\\" element={<Experiment />} />\\n        <Route path=\\\"/results\\\" element={<Results />} />\\n      </Routes>\\n    </Router>\\n  );\\n}\\n\\nexport default App;\\n\",\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom/client\\\";\\nimport \\\"./App.css\\\";\\nimport App from \\\"./App\\\";\\nimport { DataProvider } from \\\"./context/DataContext\\\";\\n\\nconst root = ReactDOM.createRoot(document.getElementById(\\\"root\\\"));\\nroot.render(\\n  <React.StrictMode>\\n    <DataProvider>\\n      <App />\\n    </DataProvider>\\n  </React.StrictMode>\\n);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{16:function(e,t,a){},17:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),l=a(7),i=a.n(l),s=(a(16),a(3)),c=a(1);var o=function(){return r.a.createElement(\"div\",null,r.a.createElement(\"header\",null,r.a.createElement(\"h1\",null,\"Welcome to the Experiment!\")),r.a.createElement(\"main\",null,r.a.createElement(\"p\",null,\"The goal of this experiment is to study how different identifier styles - \",r.a.createElement(\"b\",null,\"camelCase\"),\" and \",r.a.createElement(\"b\",null,\"kebab-case\"),\" - affect reading speed and accuracy.\"),r.a.createElement(\"p\",null,\"Here is what you are asked to do:\"),r.a.createElement(\"p\",null,r.a.createElement(\"ul\",null,r.a.createElement(\"li\",null,\"Start by filling out a short demographics form.\"),r.a.createElement(\"li\",null,\"Find the correct identifier matching a given phrase as quickly as possible.\"),r.a.createElement(\"li\",null,\"Complete all the tasks!\"))),r.a.createElement(\"p\",null,\"Please ensure you are in a distraction-free environment. Whenever you're ready, click the button below to begin.\"),r.a.createElement(\"button\",{onClick:()=>window.location.href=\"/form\"},\"Start Experiment\")),r.a.createElement(\"footer\",null,r.a.createElement(\"p\",null,\"Experimentation & Evaluation - 2024\"),r.a.createElement(\"p\",null,\"\\xa9 Noah Salvi, Alessandro Della Flora, Stipe Peran\")))};const m=Object(n.createContext)(),u=e=>{let{children:t}=e;const[a,l]=Object(n.useState)({name:\"\",age:\"\",experience:\"\"}),[i,s]=Object(n.useState)([]),[c,o]=Object(n.useState)(\"\");return r.a.createElement(m.Provider,{value:{formData:a,setFormData:l,taskData:i,setTaskData:s,csvData:c,setCsvData:o}},t)};var d=m;var p=function(){const{formData:e,setFormData:t}=Object(n.useContext)(d),a=Object(c.p)(),l=a=>{const{name:n,value:r}=a.target;t({...e,[n]:r})};return r.a.createElement(\"div\",null,r.a.createElement(\"header\",null,r.a.createElement(\"h1\",null,\"Demographics Form\")),r.a.createElement(\"main\",null,r.a.createElement(\"form\",{onSubmit:e=>{e.preventDefault(),a(\"/experiment\")},className:\"form-container\"},r.a.createElement(\"label\",{className:\"form-label\"},\"Name:\",r.a.createElement(\"input\",{type:\"text\",name:\"name\",value:e.name,onChange:l,className:\"form-input\",required:!0})),r.a.createElement(\"label\",{className:\"form-label\"},\"Age:\",r.a.createElement(\"input\",{type:\"number\",name:\"age\",value:e.age,onChange:l,className:\"form-input\",required:!0})),r.a.createElement(\"label\",{className:\"form-label\"},\"Programming Experience:\",r.a.createElement(\"select\",{name:\"experience\",value:e.experience,onChange:l,className:\"form-input\",required:!0},r.a.createElement(\"option\",{value:\"\",disabled:!0},\"Select your experience\"),r.a.createElement(\"option\",{value:\"beginner\"},\"Beginner\"),r.a.createElement(\"option\",{value:\"intermediate\"},\"Intermediate\"),r.a.createElement(\"option\",{value:\"advanced\"},\"Advanced\"))),r.a.createElement(\"button\",{type:\"submit\"},\"Submit\"))),r.a.createElement(\"footer\",null,r.a.createElement(\"p\",null,\"Experimentation & Evaluation - 2024\")))},f=a(4),E=a.n(f);var b=function(){const{formData:e,taskData:t,setTaskData:a,setCsvData:l}=Object(n.useContext)(d),[i,s]=Object(n.useState)(0),[o,m]=Object(n.useState)(null),[u,p]=Object(n.useState)(3),[f,b]=Object(n.useState)({}),[g,h]=Object(n.useState)(!1),[y,v]=Object(n.useState)([]),[C,k]=Object(n.useState)([]),x=Object(c.p)(),S=[{identifier:\"moveSouth\",type:\"camelCase\",distractors:[\"moveSource\",\"moreSouth\",\"moverSound\"],sentence:\"move south\"},{identifier:\"calculateTotal\",type:\"camelCase\",distractors:[\"calculateSum\",\"totalCalculation\",\"sumCalculate\"],sentence:\"calculate total\"},{identifier:\"user-login-details\",type:\"kebabCase\",distractors:[\"user-details\",\"login-user-details\",\"user-logins\"],sentence:\"user login details\"},{identifier:\"send-message\",type:\"kebabCase\",distractors:[\"seed-mastodon\",\"sand-messenger\",\"deliverMessage\"],sentence:\"send message\"},{identifier:\"startProcess\",type:\"camelCase\",distractors:[\"processStart\",\"initiateProcess\",\"streamProcess\"],sentence:\"start process\"},{identifier:\"refresh-page\",type:\"kebabCase\",distractors:[\"reload-page\",\"reset-page\",\"update-page\"],sentence:\"refresh page\"},{identifier:\"noPainNoGain\",type:\"camelCase\",distractors:[\"noPaceNoTaste\",\"noPainNogain\",\"noPastNoGassed\"],sentence:\"no pain no gain\"},{identifier:\"delete-item\",type:\"kebabCase\",distractors:[\"remove-item\",\"erase-item\",\"discard-item\"],sentence:\"delete item\"},{identifier:\"add-to-cart\",type:\"kebabCase\",distractors:[\"add-cart\",\"place-cart\",\"cart-add\"],sentence:\"add to cart\"},{identifier:\"openFile\",type:\"camelCase\",distractors:[\"openFolder\",\"openFiles\",\"startFile\"],sentence:\"open file\"},{identifier:\"goodGame\",type:\"camelCase\",distractors:[\"goodgame\",\"badGame\",\"goodDay\"],sentence:\"good game\"},{identifier:\"as-soon-as-possible\",type:\"kebabCase\",distractors:[\"as-soon-possible\",\"soon-as-possible\",\"as-soup-as-possible\"],sentence:\"as soon as possible\"},{identifier:\"noWay\",type:\"camelCase\",distractors:[\"noShame\",\"noWave\",\"noPhase\"],sentence:\"no way\"},{identifier:\"yes-man\",type:\"kebabCase\",distractors:[\"no-man\",\"yes-men\",\"yes-can\"],sentence:\"yes man\"},{identifier:\"frontEnd\",type:\"camelCase\",distractors:[\"backEnd\",\"frontMen\",\"frontMad\"],sentence:\"front end\"},{identifier:\"appleCare\",type:\"camelCase\",distractors:[\"appleStare\",\"apleCare\",\"apppleCare\"],sentence:\"apple care\"},{identifier:\"hugoBoss\",type:\"camelCase\",distractors:[\"hugoBros\",\"hugeBoss\",\"bossHugo\"],sentence:\"hugo boss\"},{identifier:\"pop-punk\",type:\"kebabCase\",distractors:[\"pro-funk\",\"per-punk\",\"pop-drunk\"],sentence:\"pop punk\"},{identifier:\"ciao-a-tutti\",type:\"kebabCase\",distractors:[\"ciao-tutti\",\"ciao-ai-brutti\",\"cioa-a-tutti\"],sentence:\"ciao a tutti\"},{identifier:\"end-of-experiment\",type:\"kebabCase\",distractors:[\"sand-of-experiment\",\"end-or-experiment\",\"end-of-ecsperiment\"],sentence:\"end of experiment\"}];Object(n.useEffect)(()=>{a([])},[a]),Object(n.useEffect)(()=>{if(u>0){const e=setTimeout(()=>p(u-1),1e3);return()=>clearTimeout(e)}null===o&&m(Date.now())},[u,o]),Object(n.useEffect)(()=>{if(S&&S.length>0){const e=[S[i].identifier,...S[i].distractors];v(e.sort(()=>Math.random()-.5)),k([])}},[i]);const j=()=>{const a=E.a.unparse(t.map(t=>({name:e.name,age:e.age,experience:e.experience,identifier:t.identifier,type:t.type,timeTaken:t.timeTaken,isCorrect:t.isCorrect})));l(a)};return r.a.createElement(\"div\",null,r.a.createElement(\"header\",null,r.a.createElement(\"h1\",null,\"Experiment\")),r.a.createElement(\"main\",null,u>0?r.a.createElement(\"div\",null,r.a.createElement(\"h1\",null,\"The experiment will start in:\"),r.a.createElement(\"h1\",null,u)):i<S.length?r.a.createElement(\"div\",null,r.a.createElement(\"p\",null,\"Identify the corresponding identifier for:\"),r.a.createElement(\"h1\",null,r.a.createElement(\"strong\",null,S[i].sentence)),r.a.createElement(\"div\",{className:\"card-grid\"},y.map((e,t)=>r.a.createElement(\"button\",{key:t,className:\"card-button\",onClick:()=>((e,t)=>{const n=Date.now()-o;g||(e?(b({[t]:\"green\"}),h(!0),a(e=>[...e.filter(e=>e.identifier!==S[i].identifier),{...S[i],timeTaken:n,isCorrect:!0}]),setTimeout(()=>{i+1<S.length?(s(i+1),m(Date.now()),b({}),h(!1)):(j(),x(\"/results\"))},1e3)):(g||a(e=>{const t=e.find(e=>e.identifier===S[i].identifier);return t&&t.isCorrect?e:[...e.filter(e=>e.identifier!==S[i].identifier),{...S[i],timeTaken:n,isCorrect:!1}]}),k(e=>[...e,t])))})(e===S[i].identifier,e),style:{backgroundColor:f[e]||(C.includes(e)?\"red\":\"\"),pointerEvents:g?\"none\":\"auto\"}},e))),r.a.createElement(\"p\",null,\"Task \",i+1,\" of \",S.length)):r.a.createElement(\"p\",null,\"Experiment completed!\")))};var g=function(){const{taskData:e,formData:t}=Object(n.useContext)(d);return Object(n.useEffect)(()=>{e&&t&&function(e,t){const a=E.a.unparse(e.map(e=>({age:t.age,experience:t.experience,identifier:e.identifier,type:e.type,timeTaken:e.timeTaken}))),n=new Blob([a],{type:\"text/csv;charset=utf-8;\"}),r=URL.createObjectURL(n),l=`experiment_results_${t.name||\"participant\"}.csv`,i=document.createElement(\"a\");i.setAttribute(\"href\",r),i.setAttribute(\"download\",l),document.body.appendChild(i),i.click(),document.body.removeChild(i)}(e,t)},[e,t]),r.a.createElement(\"div\",null,r.a.createElement(\"header\",null,r.a.createElement(\"h1\",null,\"Experiment Results\")),r.a.createElement(\"main\",null,r.a.createElement(\"h3\",null,\"Thank you for participating in the experiment!\"),r.a.createElement(\"h3\",null,\"Summary\"),r.a.createElement(\"ul\",null,e.map((e,t)=>r.a.createElement(\"li\",{key:t},r.a.createElement(\"strong\",null,e.identifier),\" (\",e.type,\"): \",e.timeTaken,\"ms\")))),r.a.createElement(\"footer\",null,r.a.createElement(\"p\",null,\"Experimentation & Evaluation - 2024\")))};var h=function(){return r.a.createElement(s.a,null,r.a.createElement(c.c,null,r.a.createElement(c.a,{path:\"/\",element:r.a.createElement(o,null)}),r.a.createElement(c.a,{path:\"/form\",element:r.a.createElement(p,null)}),r.a.createElement(c.a,{path:\"/experiment\",element:r.a.createElement(b,null)}),r.a.createElement(c.a,{path:\"/results\",element:r.a.createElement(g,null)})))};i.a.createRoot(document.getElementById(\"root\")).render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(u,null,r.a.createElement(h,null))))},8:function(e,t,a){e.exports=a(17)}},[[8,1,2]]]);","extractedComments":[]}